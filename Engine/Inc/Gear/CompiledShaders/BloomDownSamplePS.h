#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: ece26d36acab8b06b159b5af20a46cc3
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer TextureIndices
; {
;
;   struct TextureIndices
;   {
;
;       uint sourceTextureIdx;                        ; Offset:    0
;   
;   } TextureIndices;                                 ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; TextureIndices                    cbuffer      NA          NA     CB0            cb1     1
; linearClampSampler                sampler      NA          NA      S0             s2     1
;
;
; ViewId state:
;
; Number of inputs: 2, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1 }
;   output 1 depends on inputs: { 0, 1 }
;   output 2 depends on inputs: { 0, 1 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.Dimensions = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%TextureIndices = type { i32 }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 13, i32 4 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %7 = extractvalue %dx.types.CBufRet.i32 %6, 0
  %8 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %7, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %10 = call %dx.types.Dimensions @dx.op.getDimensions(i32 72, %dx.types.Handle %9, i32 0)  ; GetDimensions(handle,mipLevel)
  %11 = extractvalue %dx.types.Dimensions %10, 0
  %12 = sitofp i32 %11 to float
  %13 = extractvalue %dx.types.Dimensions %10, 1
  %14 = sitofp i32 %13 to float
  %15 = fdiv fast float 1.000000e+00, %12
  %16 = fdiv fast float 1.000000e+00, %14
  %17 = fmul fast float %15, 2.000000e+00
  %18 = fsub fast float %4, %17
  %19 = fmul fast float %16, 2.000000e+00
  %20 = fadd fast float %19, %5
  %21 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %22 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %21, float %18, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %23 = extractvalue %dx.types.ResRet.f32 %22, 0
  %24 = extractvalue %dx.types.ResRet.f32 %22, 1
  %25 = extractvalue %dx.types.ResRet.f32 %22, 2
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %27 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %26, float %4, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %28 = extractvalue %dx.types.ResRet.f32 %27, 0
  %29 = extractvalue %dx.types.ResRet.f32 %27, 1
  %30 = extractvalue %dx.types.ResRet.f32 %27, 2
  %31 = fadd fast float %17, %4
  %32 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %33 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %32, float %31, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %34 = extractvalue %dx.types.ResRet.f32 %33, 0
  %35 = extractvalue %dx.types.ResRet.f32 %33, 1
  %36 = extractvalue %dx.types.ResRet.f32 %33, 2
  %37 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %38 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %37, float %18, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %39 = extractvalue %dx.types.ResRet.f32 %38, 0
  %40 = extractvalue %dx.types.ResRet.f32 %38, 1
  %41 = extractvalue %dx.types.ResRet.f32 %38, 2
  %42 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %43 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %42, float %4, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %44 = extractvalue %dx.types.ResRet.f32 %43, 0
  %45 = extractvalue %dx.types.ResRet.f32 %43, 1
  %46 = extractvalue %dx.types.ResRet.f32 %43, 2
  %47 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %48 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %47, float %31, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %49 = extractvalue %dx.types.ResRet.f32 %48, 0
  %50 = extractvalue %dx.types.ResRet.f32 %48, 1
  %51 = extractvalue %dx.types.ResRet.f32 %48, 2
  %52 = fsub fast float %5, %19
  %53 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %54 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %53, float %18, float %52, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %55 = extractvalue %dx.types.ResRet.f32 %54, 0
  %56 = extractvalue %dx.types.ResRet.f32 %54, 1
  %57 = extractvalue %dx.types.ResRet.f32 %54, 2
  %58 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %59 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %58, float %4, float %52, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %60 = extractvalue %dx.types.ResRet.f32 %59, 0
  %61 = extractvalue %dx.types.ResRet.f32 %59, 1
  %62 = extractvalue %dx.types.ResRet.f32 %59, 2
  %63 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %64 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %63, float %31, float %52, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %65 = extractvalue %dx.types.ResRet.f32 %64, 0
  %66 = extractvalue %dx.types.ResRet.f32 %64, 1
  %67 = extractvalue %dx.types.ResRet.f32 %64, 2
  %68 = fsub fast float %4, %15
  %69 = fadd fast float %16, %5
  %70 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %71 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %70, float %68, float %69, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %72 = extractvalue %dx.types.ResRet.f32 %71, 0
  %73 = extractvalue %dx.types.ResRet.f32 %71, 1
  %74 = extractvalue %dx.types.ResRet.f32 %71, 2
  %75 = fadd fast float %15, %4
  %76 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %77 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %76, float %75, float %69, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %78 = extractvalue %dx.types.ResRet.f32 %77, 0
  %79 = extractvalue %dx.types.ResRet.f32 %77, 1
  %80 = extractvalue %dx.types.ResRet.f32 %77, 2
  %81 = fsub fast float %5, %16
  %82 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %83 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %82, float %68, float %81, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %84 = extractvalue %dx.types.ResRet.f32 %83, 0
  %85 = extractvalue %dx.types.ResRet.f32 %83, 1
  %86 = extractvalue %dx.types.ResRet.f32 %83, 2
  %87 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %88 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %87, float %75, float %81, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %89 = extractvalue %dx.types.ResRet.f32 %88, 0
  %90 = extractvalue %dx.types.ResRet.f32 %88, 1
  %91 = extractvalue %dx.types.ResRet.f32 %88, 2
  %92 = fadd fast float %34, %23
  %93 = fadd fast float %35, %24
  %94 = fadd fast float %36, %25
  %95 = fadd fast float %92, %55
  %96 = fadd fast float %93, %56
  %97 = fadd fast float %94, %57
  %98 = fadd fast float %95, %65
  %99 = fadd fast float %96, %66
  %100 = fadd fast float %97, %67
  %101 = fmul fast float %98, 3.125000e-02
  %102 = fmul fast float %99, 3.125000e-02
  %103 = fmul fast float %100, 3.125000e-02
  %104 = fadd fast float %39, %28
  %105 = fadd fast float %40, %29
  %106 = fadd fast float %41, %30
  %107 = fadd fast float %104, %49
  %108 = fadd fast float %105, %50
  %109 = fadd fast float %106, %51
  %110 = fadd fast float %107, %60
  %111 = fadd fast float %108, %61
  %112 = fadd fast float %109, %62
  %113 = fmul fast float %110, 6.250000e-02
  %114 = fmul fast float %111, 6.250000e-02
  %115 = fmul fast float %112, 6.250000e-02
  %116 = fadd fast float %72, %44
  %117 = fadd fast float %116, %78
  %118 = fadd fast float %117, %84
  %119 = fadd fast float %118, %89
  %120 = fmul fast float %119, 1.250000e-01
  %121 = fadd fast float %101, %113
  %122 = fadd fast float %121, %120
  %123 = fadd fast float %73, %45
  %124 = fadd fast float %123, %79
  %125 = fadd fast float %124, %85
  %126 = fadd fast float %125, %90
  %127 = fmul fast float %126, 1.250000e-01
  %128 = fadd fast float %102, %114
  %129 = fadd fast float %128, %127
  %130 = fadd fast float %74, %46
  %131 = fadd fast float %130, %80
  %132 = fadd fast float %131, %86
  %133 = fadd fast float %132, %91
  %134 = fmul fast float %133, 1.250000e-01
  %135 = fadd fast float %103, %115
  %136 = fadd fast float %135, %134
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %122)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %129)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %136)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.Dimensions @dx.op.getDimensions(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"ps", i32 6, i32 6}
!3 = !{null, null, !4, !6}
!4 = !{!5}
!5 = !{i32 0, %TextureIndices* undef, !"", i32 0, i32 1, i32 1, i32 4, null}
!6 = !{!7}
!7 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!8 = !{[4 x i32] [i32 2, i32 4, i32 7, i32 7]}
!9 = !{void ()* @main, !"main", !10, !3, !18}
!10 = !{!11, !15, null}
!11 = !{!12}
!12 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 3}
!15 = !{!16}
!16 = !{i32 0, !"SV_Target", i8 9, i8 16, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !17}
!17 = !{i32 3, i32 15}
!18 = !{i32 0, i64 1073741824}

#endif

const unsigned char g_BloomDownSamplePSBytes[] = {
  0x44, 0x58, 0x42, 0x43, 0xff, 0x20, 0x10, 0xbb, 0x35, 0xec, 0x24, 0x93,
  0x32, 0x15, 0x8b, 0xcd, 0xaf, 0x82, 0x48, 0x27, 0x01, 0x00, 0x00, 0x00,
  0xa7, 0x13, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00,
  0x7f, 0x01, 0x00, 0x00, 0xb3, 0x08, 0x00, 0x00, 0xcf, 0x08, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0x31, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x4f, 0x53, 0x47, 0x31, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x50,
  0x53, 0x56, 0x30, 0xb8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53,
  0x54, 0x41, 0x54, 0x2c, 0x07, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0xcb,
  0x01, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x14, 0x07, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21,
  0x0c, 0x00, 0x00, 0xc2, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41,
  0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25,
  0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42,
  0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a,
  0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00,
  0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41,
  0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51,
  0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
  0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13,
  0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89,
  0x20, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20,
  0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84,
  0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10,
  0x94, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0,
  0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c,
  0x80, 0x20, 0x88, 0x62, 0x20, 0x84, 0x8a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0,
  0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85, 0x40, 0x81, 0x32, 0x47, 0x10,
  0x94, 0x62, 0x21, 0x08, 0x86, 0xa1, 0xe6, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0xbf, 0x43, 0x18, 0xa2, 0x91, 0x10, 0xa7, 0x91, 0x10, 0x41,
  0x10, 0x04, 0x51, 0x88, 0x87, 0x58, 0x08, 0x82, 0x6e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b,
  0x15, 0xc3, 0x30, 0x0c, 0x44, 0x61, 0x24, 0x62, 0x59, 0x86, 0x61, 0x18,
  0x08, 0x82, 0x18, 0x68, 0x3a, 0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9,
  0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x47, 0x6e, 0x1b, 0x11, 0x04, 0x41,
  0x10, 0x85, 0xa8, 0x88, 0x85, 0x20, 0xeb, 0xb6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0x24, 0x87, 0x8a, 0x04, 0x22, 0x8d, 0x9c, 0x87,
  0x88, 0x26, 0x84, 0x90, 0x90, 0x40, 0x10, 0x85, 0x58, 0x88, 0x05, 0xa3,
  0xec, 0xa0, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x0d,
  0x69, 0x06, 0x44, 0x10, 0x04, 0x51, 0x94, 0x62, 0x21, 0x36, 0x82, 0x21,
  0x6e, 0x20, 0xe0, 0x9c, 0x96, 0xb8, 0x26, 0x2a, 0x22, 0xc4, 0x66, 0x40,
  0x04, 0x42, 0x42, 0x01, 0x41, 0xdf, 0x4d, 0xd2, 0x14, 0x51, 0xc2, 0xe4,
  0xb3, 0x00, 0xf3, 0x2c, 0x44, 0xc4, 0x4e, 0xc0, 0x44, 0xa0, 0x80, 0xa0,
  0x30, 0x09, 0x88, 0x39, 0x02, 0x50, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87,
  0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87,
  0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00,
  0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0,
  0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60,
  0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60,
  0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0,
  0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40,
  0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x02, 0x02,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x06,
  0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e,
  0x0e, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2,
  0x40, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19,
  0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a,
  0xa0, 0x18, 0x46, 0x00, 0x0a, 0xa1, 0x08, 0xca, 0xa0, 0x1c, 0x4a, 0xa1,
  0x3c, 0xca, 0xae, 0x34, 0x05, 0x4a, 0x83, 0x8a, 0x92, 0x18, 0x01, 0x28,
  0x82, 0x02, 0x29, 0x04, 0x22, 0x0b, 0x10, 0x10, 0x10, 0x10, 0x81, 0xc0,
  0x19, 0x00, 0x12, 0x67, 0x00, 0x68, 0x1c, 0x8b, 0x10, 0x88, 0xe3, 0xa0,
  0x6f, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x8a,
  0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35,
  0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b,
  0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b,
  0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79,
  0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0x22,
  0x99, 0x20, 0x10, 0xca, 0x06, 0x61, 0x20, 0x26, 0x08, 0xc4, 0xb2, 0x41,
  0x30, 0x0c, 0x0a, 0x70, 0x73, 0x1b, 0x06, 0x84, 0x20, 0x26, 0x08, 0x60,
  0xb0, 0xd1, 0xa1, 0x2a, 0xc3, 0xa3, 0xab, 0x93, 0x2b, 0x4b, 0x72, 0x23,
  0x4b, 0x1b, 0x2b, 0x9b, 0x9b, 0x20, 0x10, 0xcc, 0x06, 0xc4, 0x50, 0x16,
  0x63, 0x18, 0x18, 0x60, 0x43, 0xd0, 0x4c, 0x10, 0xc4, 0x80, 0xa3, 0xc4,
  0x96, 0xe6, 0x56, 0x16, 0x26, 0x37, 0xc4, 0x16, 0xd6, 0x06, 0x37, 0x15,
  0xd6, 0x06, 0xc7, 0x56, 0x26, 0x37, 0x41, 0x20, 0x9a, 0x0d, 0x88, 0xf1,
  0x40, 0x46, 0x34, 0x18, 0xc0, 0x86, 0x40, 0xda, 0x40, 0x00, 0x80, 0x33,
  0x4d, 0x10, 0x3e, 0x8f, 0xd0, 0xdc, 0x5b, 0x9d, 0xdc, 0x58, 0x19, 0x55,
  0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x59, 0x12, 0x19, 0xde, 0x04, 0x81, 0x70,
  0x26, 0x08, 0xc4, 0x33, 0x41, 0x20, 0xa0, 0x0d, 0x06, 0x61, 0x5d, 0x06,
  0x96, 0x6d, 0x10, 0x18, 0x6d, 0xc3, 0x60, 0x54, 0xdb, 0x04, 0x41, 0x00,
  0x36, 0x00, 0x1b, 0x06, 0xc3, 0xf3, 0x36, 0x04, 0xdf, 0x86, 0x61, 0xe8,
  0xc0, 0x60, 0x82, 0x30, 0x06, 0xdd, 0x86, 0x40, 0x0c, 0x48, 0xb4, 0x85,
  0xa5, 0xb9, 0x11, 0xa1, 0x2a, 0xc2, 0x1a, 0x7a, 0x7a, 0x92, 0x22, 0x9a,
  0x20, 0x14, 0xd5, 0x04, 0xa1, 0xb0, 0x36, 0x04, 0xc6, 0x04, 0xa1, 0xb8,
  0x36, 0x08, 0xd7, 0xb5, 0x61, 0x31, 0xca, 0xc0, 0x0c, 0xce, 0x00, 0x0d,
  0xd2, 0x60, 0x48, 0x03, 0xe3, 0x0c, 0xd4, 0x60, 0x43, 0xb0, 0x06, 0x4c,
  0xa6, 0xac, 0xbe, 0xa8, 0xc2, 0xe4, 0xce, 0xca, 0xe8, 0x26, 0x08, 0x05,
  0x36, 0x41, 0x28, 0xb2, 0x09, 0x02, 0x11, 0x6d, 0x10, 0x2e, 0x38, 0xd8,
  0xb0, 0x18, 0x6d, 0x60, 0x06, 0x6e, 0x80, 0x06, 0x67, 0x30, 0xbc, 0x81,
  0x71, 0x06, 0x71, 0xb0, 0x21, 0x90, 0x83, 0x0d, 0x03, 0x1b, 0xcc, 0x01,
  0x30, 0x41, 0x20, 0x03, 0x6d, 0x83, 0x60, 0xd4, 0xc1, 0x86, 0xa2, 0x23,
  0x03, 0x3a, 0xa0, 0xec, 0x80, 0x86, 0x19, 0xdb, 0x5b, 0x18, 0xdd, 0xdc,
  0x04, 0x81, 0x90, 0x58, 0xa4, 0xb9, 0xcd, 0xd1, 0xcd, 0x4d, 0x10, 0x88,
  0x89, 0xc6, 0x5c, 0xda, 0xd9, 0x17, 0x1b, 0x19, 0x8d, 0xb9, 0xb4, 0xb3,
  0xaf, 0x39, 0x3a, 0x22, 0x74, 0x65, 0x78, 0x5f, 0x6e, 0x6f, 0x72, 0x6d,
  0x13, 0x04, 0x82, 0xda, 0xa0, 0xe0, 0x41, 0x1e, 0xe8, 0xc1, 0x1e, 0xf0,
  0x41, 0xd4, 0x07, 0x8c, 0x1f, 0xfc, 0x41, 0x15, 0x36, 0x36, 0xbb, 0x36,
  0x97, 0x34, 0xb2, 0x32, 0x37, 0xba, 0x29, 0x41, 0x50, 0x85, 0x0c, 0xcf,
  0xc5, 0xae, 0x4c, 0x6e, 0x2e, 0xed, 0xcd, 0x6d, 0x4a, 0x40, 0x34, 0x21,
  0xc3, 0x73, 0xb1, 0x0b, 0x63, 0xb3, 0x2b, 0x93, 0x9b, 0x12, 0x18, 0x75,
  0xc8, 0xf0, 0x5c, 0xe6, 0xd0, 0xc2, 0xc8, 0xca, 0xe4, 0x9a, 0xde, 0xc8,
  0xca, 0xd8, 0xa6, 0x04, 0x48, 0x19, 0x32, 0x3c, 0x17, 0xb9, 0xb2, 0xb9,
  0xb7, 0x3a, 0xb9, 0xb1, 0xb2, 0xb9, 0x29, 0xc1, 0x54, 0x89, 0x0c, 0xcf,
  0x85, 0x2e, 0x0f, 0xae, 0x2c, 0xc8, 0xcd, 0xed, 0x8d, 0x2e, 0x8c, 0x2e,
  0xed, 0xcd, 0x6d, 0x6e, 0x8a, 0xb0, 0x81, 0x41, 0x1d, 0x32, 0x3c, 0x17,
  0xbb, 0xb4, 0xb2, 0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2, 0x29,
  0x81, 0x18, 0xd4, 0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83,
  0x7a, 0x4b, 0x73, 0xa3, 0x9b, 0x9b, 0x12, 0xd8, 0x41, 0x17, 0x32, 0x3c,
  0x97, 0xb1, 0xb7, 0x3a, 0x37, 0xba, 0x32, 0xb9, 0xb9, 0x29, 0xc1, 0x1f,
  0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33,
  0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98,
  0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33,
  0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05,
  0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43,
  0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08,
  0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78,
  0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1,
  0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33,
  0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e,
  0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03,
  0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60,
  0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80,
  0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8,
  0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18,
  0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee,
  0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c,
  0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c,
  0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43,
  0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3,
  0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83,
  0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21,
  0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1,
  0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6,
  0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4,
  0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x76,
  0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x98, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42,
  0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98,
  0x8f, 0xdc, 0xb6, 0x21, 0x74, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04,
  0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0xf1, 0x45, 0x0e, 0xb3, 0x21, 0xcd,
  0x80, 0x34, 0x86, 0x0d, 0x68, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04,
  0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0xf1, 0x45, 0x0e, 0x13, 0x12, 0xc0,
  0x63, 0x04, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x1b, 0xc4, 0xd4, 0x21, 0x0c,
  0xd1, 0x48, 0x88, 0xd3, 0x48, 0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe,
  0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x05, 0xd0,
  0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6,
  0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4,
  0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x01, 0x10, 0x0c, 0x80, 0x34, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0xe2, 0x6d, 0x36, 0xac,
  0xab, 0x8b, 0x06, 0xb1, 0x59, 0xb5, 0xaf, 0x20, 0xa4, 0x6c, 0xc3, 0x44,
  0x58, 0x49, 0x4c, 0xd0, 0x0a, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0xb4,
  0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x00, 0xb8, 0x0a, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21,
  0x0c, 0x00, 0x00, 0xab, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41,
  0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25,
  0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42,
  0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a,
  0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00,
  0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41,
  0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51,
  0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
  0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13,
  0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89,
  0x20, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20,
  0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84,
  0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10,
  0x94, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0,
  0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c,
  0x80, 0x20, 0x88, 0x62, 0x20, 0x84, 0x8a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0,
  0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85, 0x40, 0x81, 0x32, 0x47, 0x10,
  0x94, 0x62, 0x21, 0x08, 0x86, 0xa1, 0xe6, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0xbf, 0x43, 0x18, 0xa2, 0x91, 0x10, 0xa7, 0x91, 0x10, 0x41,
  0x10, 0x04, 0x51, 0x88, 0x87, 0x58, 0x08, 0x82, 0x6e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b,
  0x15, 0xc3, 0x30, 0x0c, 0x44, 0x61, 0x24, 0x62, 0x59, 0x86, 0x61, 0x18,
  0x08, 0x82, 0x18, 0x68, 0x3a, 0x6a, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9,
  0xe7, 0x36, 0xaa, 0x58, 0x89, 0xc9, 0x47, 0x6e, 0x1b, 0x11, 0x04, 0x41,
  0x10, 0x85, 0xa8, 0x88, 0x85, 0x20, 0xeb, 0xb6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0x7f, 0x25, 0x24, 0x87, 0x8a, 0x04, 0x22, 0x8d, 0x9c, 0x87,
  0x88, 0x26, 0x84, 0x90, 0x90, 0x40, 0x10, 0x85, 0x58, 0x88, 0x05, 0xa3,
  0xec, 0xa0, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x0d,
  0x69, 0x06, 0x44, 0x10, 0x04, 0x51, 0x94, 0x62, 0x21, 0x36, 0x82, 0x21,
  0x6e, 0x20, 0xe0, 0x9c, 0x96, 0xb8, 0x26, 0x2a, 0x22, 0xc4, 0x66, 0x40,
  0x04, 0x42, 0x42, 0x01, 0x41, 0xdf, 0x4d, 0xd2, 0x14, 0x51, 0xc2, 0xe4,
  0xb3, 0x00, 0xf3, 0x2c, 0x44, 0xc4, 0x4e, 0xc0, 0x44, 0xa0, 0x80, 0xa0,
  0x30, 0x09, 0x88, 0x39, 0x02, 0x50, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87,
  0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87,
  0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00,
  0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0,
  0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60,
  0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60,
  0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0,
  0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40,
  0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x02, 0x02,
  0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x06,
  0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e,
  0x0e, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2,
  0x40, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19,
  0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a,
  0xa0, 0x18, 0x46, 0x00, 0x0a, 0xa1, 0x08, 0xca, 0xa0, 0x3c, 0xa8, 0x28,
  0x89, 0x11, 0x80, 0x22, 0x28, 0x90, 0x42, 0x20, 0xb2, 0x00, 0x01, 0x01,
  0x01, 0x11, 0x48, 0x9c, 0x01, 0xa0, 0x71, 0x2c, 0x42, 0x20, 0x8e, 0x83,
  0xc0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x57,
  0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44, 0x35,
  0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b,
  0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b, 0x7b,
  0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81, 0x79,
  0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04, 0x22,
  0x99, 0x20, 0x10, 0xca, 0x06, 0x61, 0x20, 0x28, 0xc0, 0xcd, 0x6d, 0x18,
  0x0c, 0x82, 0x98, 0x20, 0x10, 0xcb, 0x04, 0x01, 0x0c, 0x30, 0x02, 0x13,
  0x04, 0x82, 0xd9, 0x80, 0x20, 0x89, 0x82, 0x0c, 0xc3, 0x02, 0x6c, 0x08,
  0x98, 0x09, 0x82, 0x18, 0x58, 0x13, 0x04, 0xa2, 0xd9, 0x80, 0x20, 0x8e,
  0x82, 0x3c, 0x03, 0x02, 0x6c, 0x08, 0xa0, 0x0d, 0x04, 0x00, 0x34, 0xd1,
  0x04, 0x61, 0x0c, 0xae, 0x0d, 0xc1, 0x34, 0x41, 0x10, 0x00, 0x12, 0x6d,
  0x61, 0x69, 0x6e, 0x44, 0xa8, 0x8a, 0xb0, 0x86, 0x9e, 0x9e, 0xa4, 0x88,
  0x26, 0x08, 0x05, 0x34, 0x41, 0x28, 0xa2, 0x0d, 0x01, 0x32, 0x41, 0x28,
  0xa4, 0x09, 0x02, 0xe1, 0x6c, 0x10, 0x38, 0x6e, 0xc3, 0x82, 0x5c, 0x58,
  0xa6, 0x6d, 0xc3, 0x86, 0x64, 0xdd, 0x86, 0xc0, 0x63, 0x32, 0x65, 0xf5,
  0x45, 0x15, 0x26, 0x77, 0x56, 0x46, 0x37, 0x41, 0x28, 0xa6, 0x09, 0x42,
  0x41, 0x4d, 0x10, 0x88, 0x67, 0x83, 0xc0, 0x8d, 0xc1, 0x86, 0x05, 0x01,
  0x03, 0x2c, 0x0c, 0xb4, 0x6c, 0x10, 0x03, 0x24, 0x23, 0x83, 0x0d, 0x41,
  0x19, 0x6c, 0x18, 0x3e, 0x33, 0x00, 0x26, 0x08, 0x64, 0x50, 0x6d, 0x10,
  0x10, 0x34, 0xd8, 0x50, 0x54, 0xd6, 0x19, 0x48, 0x69, 0x50, 0x85, 0x8d,
  0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d, 0x6e, 0x4a, 0x10, 0x54,
  0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x9b, 0x12,
  0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8, 0xec, 0xca, 0xe4, 0xa6,
  0x04, 0x44, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4, 0x30, 0xb2, 0x32, 0xb9,
  0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x81, 0x51, 0x86, 0x0c, 0xcf, 0x45,
  0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c, 0x6e, 0x4a, 0x10, 0xd5,
  0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b, 0x22, 0x9b, 0xa2, 0x0b,
  0xa3, 0x2b, 0x9b, 0x12, 0x4c, 0x75, 0xc8, 0xf0, 0x5c, 0xca, 0xdc, 0xe8,
  0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6, 0xa6, 0x04, 0x69, 0x00,
  0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33,
  0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98,
  0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33,
  0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05,
  0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43,
  0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08,
  0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78,
  0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1,
  0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33,
  0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e,
  0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03,
  0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60,
  0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80,
  0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8,
  0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18,
  0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee,
  0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c,
  0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c,
  0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43,
  0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3,
  0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83,
  0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21,
  0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1,
  0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6,
  0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4,
  0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x76,
  0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44,
  0x08, 0x34, 0xc3, 0x42, 0x98, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42,
  0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98,
  0x8f, 0xdc, 0xb6, 0x21, 0x74, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04,
  0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0xf1, 0x45, 0x0e, 0xb3, 0x21, 0xcd,
  0x80, 0x34, 0x86, 0x0d, 0x68, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04,
  0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0xf1, 0x45, 0x0e, 0x13, 0x12, 0xc0,
  0x63, 0x04, 0xd3, 0x70, 0xf9, 0xce, 0xe3, 0x1b, 0xc4, 0xd4, 0x21, 0x0c,
  0xd1, 0x48, 0x88, 0xd3, 0x48, 0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe,
  0xe2, 0x00, 0x83, 0xd8, 0x3c, 0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x05, 0xd0,
  0x70, 0xf9, 0xce, 0xe3, 0x4b, 0x00, 0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6,
  0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4,
  0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x01, 0x10, 0x0c, 0x80, 0x34, 0x00,
  0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0x1d, 0x01, 0x00, 0x00, 0x13,
  0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0xc4,
  0x8c, 0x00, 0x50, 0x51, 0x02, 0x65, 0x40, 0x44, 0x71, 0x14, 0x64, 0x40,
  0x49, 0x42, 0x14, 0xec, 0xc0, 0x0c, 0x40, 0xe1, 0x95, 0x42, 0xc9, 0x0e,
  0x94, 0x46, 0xd9, 0x15, 0xed, 0x00, 0x0d, 0x63, 0x04, 0x20, 0x08, 0x82,
  0x20, 0x18, 0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0xdf, 0x18, 0x01, 0x08,
  0x82, 0x20, 0xee, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xc2, 0xde, 0x18, 0x01,
  0x08, 0x82, 0x20, 0xfe, 0xcd, 0x00, 0x10, 0x36, 0x87, 0xc0, 0x2d, 0x73,
  0x08, 0x64, 0xc0, 0xcc, 0x21, 0x34, 0x1e, 0x6d, 0x73, 0x10, 0x4d, 0xb3,
  0x6c, 0x73, 0x10, 0x49, 0xb2, 0x48, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0xc0, 0xa9, 0xc1, 0x23, 0x94, 0x41, 0x36, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0xdc, 0x1a, 0x40, 0x82, 0x1a, 0x68, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x90, 0xb5, 0x41, 0x15, 0x18, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xd0, 0x41, 0x1a, 0xa8, 0x81, 0x1a, 0x90, 0x41, 0x35, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1d, 0xa8, 0xc1, 0x1a, 0xac, 0x01,
  0x67, 0x8d, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x15, 0x07, 0xd2, 0xc0,
  0x06, 0xa3, 0x09, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8d,
  0x1d, 0x4c, 0x01, 0x18, 0x80, 0xc1, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18,
  0x64, 0x73, 0xb0, 0x05, 0xcb, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x40,
  0x77, 0xe0, 0x05, 0x70, 0x30, 0x9a, 0x10, 0x00, 0x17, 0x0c, 0x36, 0x9a,
  0x30, 0x04, 0x17, 0x0c, 0x66, 0xd5, 0x40, 0x1f, 0xb3, 0x04, 0xfa, 0x98,
  0xb0, 0xc9, 0xc7, 0x9c, 0x20, 0x3e, 0x36, 0x74, 0xf2, 0xb1, 0xe0, 0x81,
  0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x64, 0x7f, 0x70, 0x06, 0x54,
  0x36, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0x93, 0x28, 0x98, 0x41, 0x13,
  0x10, 0xc2, 0xb6, 0xf1, 0x01, 0x1f, 0x9c, 0xc1, 0x36, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x90, 0x91, 0x02, 0x1b, 0x64, 0xde, 0x88, 0xc1, 0x03, 0x80, 0x20,
  0x18, 0x4c, 0xa7, 0xb0, 0x06, 0x52, 0x70, 0x1d, 0x60, 0x00, 0x06, 0xa1,
  0x10, 0x0a, 0x6c, 0x00, 0x06, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x60, 0xce, 0x06, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41,
  0x30, 0xc8, 0x54, 0x41, 0x0e, 0x3e, 0x32, 0x18, 0x31, 0x78, 0x00, 0x10,
  0x04, 0x83, 0xa9, 0x15, 0xe2, 0x00, 0x0b, 0x84, 0xc6, 0x0c, 0xcc, 0xe0,
  0x14, 0x4e, 0x41, 0x0e, 0xcc, 0x60, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84,
  0x60, 0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0x7b,
  0x85, 0x3b, 0x20, 0x83, 0x34, 0x18, 0x31, 0x78, 0x00, 0x10, 0x04, 0x83,
  0x49, 0x16, 0xec, 0xa0, 0x0b, 0xa8, 0x30, 0x58, 0x83, 0x35, 0x60, 0x05,
  0x56, 0xb8, 0x83, 0x35, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x18,
  0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xc8, 0x68, 0x81,
  0x0f, 0xd2, 0xc0, 0x0d, 0x46, 0x0c, 0x1e, 0x00, 0x04, 0xc1, 0x60, 0xba,
  0x85, 0x3d, 0x10, 0x83, 0xe0, 0x0c, 0xcc, 0x00, 0x0e, 0xe0, 0x20, 0x16,
  0x62, 0x81, 0x0f, 0xe0, 0x60, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0x60,
  0x34, 0x61, 0x10, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0x20, 0xcb, 0x85,
  0x50, 0x70, 0x83, 0x39, 0x18, 0x31, 0x78, 0x00, 0x10, 0x04, 0x83, 0x89,
  0x17, 0x40, 0xe1, 0x0c, 0x82, 0x68, 0x0d, 0xea, 0xa0, 0x0e, 0x6c, 0xc1,
  0x16, 0x42, 0xa1, 0x0e, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46,
  0x13, 0x06, 0xc1, 0xde, 0x20, 0x0c, 0xe2, 0x33, 0x62, 0x70, 0x00, 0x20,
  0x08, 0x06, 0xd9, 0x2f, 0x9c, 0x02, 0x1d, 0xe4, 0xc1, 0x88, 0xc1, 0x03,
  0x80, 0x20, 0x18, 0x4c, 0xe2, 0x60, 0x0a, 0x6d, 0x10, 0x90, 0x81, 0xb0,
  0x07, 0x7b, 0xc0, 0x0b, 0xbc, 0x70, 0x0a, 0x7b, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x90, 0x91, 0x03, 0x2b, 0xe4, 0x81, 0x1f, 0x8c, 0x18, 0x3c, 0x00,
  0x08, 0x82, 0xc1, 0x74, 0x0e, 0xab, 0x20, 0x07, 0xc1, 0x1d, 0x1c, 0xa0,
  0x00, 0x0a, 0xe1, 0x10, 0x0e, 0xac, 0x00, 0x0a, 0xa3, 0x09, 0x01, 0x30,
  0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0x59, 0x3a, 0xc4, 0x82, 0x1f, 0x8c, 0xc2, 0x88, 0xc1, 0x03, 0x80,
  0x20, 0x18, 0x4c, 0xec, 0x00, 0x0b, 0x77, 0x10, 0x84, 0x01, 0x53, 0x0a,
  0xa5, 0x60, 0x0e, 0xe6, 0x10, 0x0b, 0xa5, 0x30, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0x06, 0x0a, 0x75, 0x10, 0x1f, 0xab,
  0x03, 0x50, 0x80, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x64, 0xf0,
  0x80, 0x0b, 0xa5, 0xa0, 0x0a, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x30,
  0xcd, 0xc3, 0x2d, 0xf8, 0x41, 0x30, 0x08, 0xac, 0xc0, 0x0a, 0xed, 0xd0,
  0x0e, 0xb8, 0xc0, 0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x60, 0x7c, 0x70, 0x0a, 0xf0, 0x19, 0x31, 0x38, 0x00, 0x10,
  0x04, 0x83, 0xcc, 0x1e, 0x7c, 0x61, 0x15, 0x60, 0x61, 0xc4, 0xe0, 0x01,
  0x40, 0x10, 0x0c, 0xa6, 0x7c, 0xe8, 0x05, 0x52, 0x08, 0x04, 0x44, 0x16,
  0x64, 0x61, 0x1e, 0xe6, 0xc1, 0x17, 0x64, 0x61, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0x8c, 0x15, 0x42, 0x21, 0x3e, 0x23,
  0x06, 0x07, 0x00, 0x82, 0x60, 0x90, 0xf1, 0x03, 0x39, 0xc4, 0x82, 0x2d,
  0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1, 0xf4, 0x0f, 0xe3, 0xa0, 0x0a,
  0xc1, 0x23, 0xe0, 0x02, 0x2e, 0xe4, 0x43, 0x3e, 0x90, 0x03, 0x2e, 0x8c,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x64, 0x21, 0x91, 0x0e, 0xb6, 0xb0, 0x0b, 0x23,
  0x06, 0x0f, 0x00, 0x82, 0x60, 0x30, 0x91, 0x04, 0x3a, 0xbc, 0x42, 0xd0,
  0x1c, 0xbd, 0xd0, 0x0b, 0xfe, 0xe0, 0x0f, 0xe9, 0xd0, 0x0b, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x60, 0x7a, 0x50, 0x0a,
  0xf0, 0x31, 0x3d, 0x28, 0x05, 0xf8, 0x98, 0x1e, 0x94, 0x02, 0x7c, 0x6c,
  0x40, 0x03, 0xf8, 0xd8, 0x80, 0x06, 0xf0, 0xb1, 0x01, 0x0d, 0xe0, 0x63,
  0x43, 0x18, 0xc0, 0xc7, 0x86, 0x30, 0x80, 0x8f, 0x0d, 0x61, 0x00, 0x1f,
  0x1b, 0xd8, 0x41, 0x3e, 0x36, 0xb4, 0x83, 0x7c, 0x6c, 0x70, 0x07, 0xf9,
  0x58, 0x28, 0xb0, 0x02, 0x7c, 0x2c, 0x14, 0x58, 0x01, 0x3e, 0x16, 0x0a,
  0xac, 0x00, 0x1f, 0x1b, 0xf4, 0x00, 0x3e, 0x36, 0xe8, 0x01, 0x7c, 0x6c,
  0xd0, 0x03, 0xf8, 0xd8, 0x20, 0x07, 0xf0, 0xb1, 0x41, 0x0e, 0xe0, 0x63,
  0x83, 0x1c, 0xc0, 0xc7, 0x86, 0x7c, 0x90, 0x8f, 0x0d, 0xfa, 0x20, 0x1f,
  0x1b, 0xf6, 0x41, 0x3e, 0xc6, 0x06, 0xa8, 0x00, 0x1f, 0x0b, 0xce, 0x00,
  0x3e, 0x16, 0x88, 0x01, 0x7c, 0x2c, 0xf0, 0xe0, 0x63, 0x41, 0x48, 0xc8,
  0xc7, 0x28, 0x04, 0x3e, 0x16, 0x08, 0xf0, 0x31, 0x39, 0x70, 0x05, 0xf8,
  0x58, 0xd0, 0x06, 0xf0, 0xb1, 0x00, 0x0d, 0xe0, 0x63, 0x01, 0x19, 0xc0,
  0xc7, 0x02, 0x94, 0x90, 0x8f, 0x69, 0x0e, 0x7c, 0x2c, 0x10, 0xe0, 0x63,
  0x78, 0x40, 0x0b, 0xf0, 0xb1, 0x60, 0x0e, 0xe0, 0x63, 0x81, 0x1b, 0xc0,
  0xc7, 0x02, 0x35, 0x80, 0x8f, 0x05, 0x2f, 0x21, 0x1f, 0x03, 0x03, 0x0a,
  0x3e, 0x16, 0x08, 0xf0, 0x19, 0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x04,
  0x2f, 0x70, 0xe2, 0x2d, 0xde, 0x22, 0x2d, 0x9e, 0x11, 0x83, 0x04, 0x00,
  0x41, 0x30, 0x40, 0xf0, 0x02, 0x27, 0xde, 0xe2, 0x2d, 0xc0, 0x02, 0x19,
  0x31, 0x48, 0x00, 0x10, 0x04, 0x03, 0x04, 0x2f, 0x70, 0xe2, 0x2d, 0xde,
  0x02, 0x2d, 0x82, 0x11, 0x83, 0x04, 0x00, 0x41, 0x30, 0x40, 0xf0, 0x02,
  0x27, 0xde, 0xe2, 0x2d, 0x7e, 0xe2, 0x25, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00
};
