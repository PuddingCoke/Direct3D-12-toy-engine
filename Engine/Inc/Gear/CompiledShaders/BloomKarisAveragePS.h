#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; TEXCOORD                 0   xy          0     NONE   float   xy  
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: 7a522cab37b563a501a591aec1c6e511
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; TEXCOORD                 0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer BloomParam
; {
;
;   struct BloomParam
;   {
;
;       uint sourceTextureIdx;                        ; Offset:    0
;       float exposure;                               ; Offset:    4
;       float gamma;                                  ; Offset:    8
;       float threshold;                              ; Offset:   12
;       float intensity;                              ; Offset:   16
;   
;   } BloomParam;                                     ; Offset:    0 Size:    20
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; BloomParam                        cbuffer      NA          NA     CB0            cb1     1
; linearClampSampler                sampler      NA          NA      S0             s2     1
;
;
; ViewId state:
;
; Number of inputs: 2, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1 }
;   output 1 depends on inputs: { 0, 1 }
;   output 2 depends on inputs: { 0, 1 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.Dimensions = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%BloomParam = type { i32, float, float, float, float }
%struct.SamplerState = type { i32 }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 3 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 1, i32 1, i32 0, i8 2 }, i32 1, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 13, i32 20 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %7 = extractvalue %dx.types.CBufRet.i32 %6, 0
  %8 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %7, i1 false, i1 false)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %9 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %8, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %10 = call %dx.types.Dimensions @dx.op.getDimensions(i32 72, %dx.types.Handle %9, i32 0)  ; GetDimensions(handle,mipLevel)
  %11 = extractvalue %dx.types.Dimensions %10, 0
  %12 = sitofp i32 %11 to float
  %13 = extractvalue %dx.types.Dimensions %10, 1
  %14 = sitofp i32 %13 to float
  %15 = fdiv fast float 1.000000e+00, %12
  %16 = fdiv fast float 1.000000e+00, %14
  %17 = fmul fast float %15, 2.000000e+00
  %18 = fsub fast float %4, %17
  %19 = fmul fast float %16, 2.000000e+00
  %20 = fadd fast float %19, %5
  %21 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %22 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %21, float %18, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %23 = extractvalue %dx.types.ResRet.f32 %22, 0
  %24 = extractvalue %dx.types.ResRet.f32 %22, 1
  %25 = extractvalue %dx.types.ResRet.f32 %22, 2
  %26 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %27 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %26, float %4, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %28 = extractvalue %dx.types.ResRet.f32 %27, 0
  %29 = extractvalue %dx.types.ResRet.f32 %27, 1
  %30 = extractvalue %dx.types.ResRet.f32 %27, 2
  %31 = fadd fast float %17, %4
  %32 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %33 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %32, float %31, float %20, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %34 = extractvalue %dx.types.ResRet.f32 %33, 0
  %35 = extractvalue %dx.types.ResRet.f32 %33, 1
  %36 = extractvalue %dx.types.ResRet.f32 %33, 2
  %37 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %38 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %37, float %18, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %39 = extractvalue %dx.types.ResRet.f32 %38, 0
  %40 = extractvalue %dx.types.ResRet.f32 %38, 1
  %41 = extractvalue %dx.types.ResRet.f32 %38, 2
  %42 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %43 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %42, float %4, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %44 = extractvalue %dx.types.ResRet.f32 %43, 0
  %45 = extractvalue %dx.types.ResRet.f32 %43, 1
  %46 = extractvalue %dx.types.ResRet.f32 %43, 2
  %47 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %48 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %47, float %31, float %5, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %49 = extractvalue %dx.types.ResRet.f32 %48, 0
  %50 = extractvalue %dx.types.ResRet.f32 %48, 1
  %51 = extractvalue %dx.types.ResRet.f32 %48, 2
  %52 = fsub fast float %5, %19
  %53 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %54 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %53, float %18, float %52, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %55 = extractvalue %dx.types.ResRet.f32 %54, 0
  %56 = extractvalue %dx.types.ResRet.f32 %54, 1
  %57 = extractvalue %dx.types.ResRet.f32 %54, 2
  %58 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %59 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %58, float %4, float %52, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %60 = extractvalue %dx.types.ResRet.f32 %59, 0
  %61 = extractvalue %dx.types.ResRet.f32 %59, 1
  %62 = extractvalue %dx.types.ResRet.f32 %59, 2
  %63 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %64 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %63, float %31, float %52, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %65 = extractvalue %dx.types.ResRet.f32 %64, 0
  %66 = extractvalue %dx.types.ResRet.f32 %64, 1
  %67 = extractvalue %dx.types.ResRet.f32 %64, 2
  %68 = fsub fast float %4, %15
  %69 = fadd fast float %16, %5
  %70 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %71 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %70, float %68, float %69, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %72 = extractvalue %dx.types.ResRet.f32 %71, 0
  %73 = extractvalue %dx.types.ResRet.f32 %71, 1
  %74 = extractvalue %dx.types.ResRet.f32 %71, 2
  %75 = fadd fast float %15, %4
  %76 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %77 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %76, float %75, float %69, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %78 = extractvalue %dx.types.ResRet.f32 %77, 0
  %79 = extractvalue %dx.types.ResRet.f32 %77, 1
  %80 = extractvalue %dx.types.ResRet.f32 %77, 2
  %81 = fsub fast float %5, %16
  %82 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %83 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %82, float %68, float %81, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %84 = extractvalue %dx.types.ResRet.f32 %83, 0
  %85 = extractvalue %dx.types.ResRet.f32 %83, 1
  %86 = extractvalue %dx.types.ResRet.f32 %83, 2
  %87 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %88 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %9, %dx.types.Handle %87, float %75, float %81, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %89 = extractvalue %dx.types.ResRet.f32 %88, 0
  %90 = extractvalue %dx.types.ResRet.f32 %88, 1
  %91 = extractvalue %dx.types.ResRet.f32 %88, 2
  %92 = fadd fast float %28, %23
  %93 = fadd fast float %29, %24
  %94 = fadd fast float %30, %25
  %95 = fadd fast float %92, %39
  %96 = fadd fast float %93, %40
  %97 = fadd fast float %94, %41
  %98 = fadd fast float %95, %44
  %99 = fadd fast float %96, %45
  %100 = fadd fast float %97, %46
  %101 = fmul fast float %98, 3.125000e-02
  %102 = fmul fast float %99, 3.125000e-02
  %103 = fmul fast float %100, 3.125000e-02
  %104 = fadd fast float %34, %28
  %105 = fadd fast float %35, %29
  %106 = fadd fast float %36, %30
  %107 = fadd fast float %104, %44
  %108 = fadd fast float %105, %45
  %109 = fadd fast float %106, %46
  %110 = fadd fast float %107, %49
  %111 = fadd fast float %108, %50
  %112 = fadd fast float %109, %51
  %113 = fmul fast float %110, 3.125000e-02
  %114 = fmul fast float %111, 3.125000e-02
  %115 = fmul fast float %112, 3.125000e-02
  %116 = fadd fast float %44, %39
  %117 = fadd fast float %45, %40
  %118 = fadd fast float %46, %41
  %119 = fadd fast float %116, %55
  %120 = fadd fast float %117, %56
  %121 = fadd fast float %118, %57
  %122 = fadd fast float %119, %60
  %123 = fadd fast float %120, %61
  %124 = fadd fast float %121, %62
  %125 = fmul fast float %122, 3.125000e-02
  %126 = fmul fast float %123, 3.125000e-02
  %127 = fmul fast float %124, 3.125000e-02
  %128 = fadd fast float %49, %44
  %129 = fadd fast float %50, %45
  %130 = fadd fast float %51, %46
  %131 = fadd fast float %128, %60
  %132 = fadd fast float %129, %61
  %133 = fadd fast float %130, %62
  %134 = fadd fast float %131, %65
  %135 = fadd fast float %132, %66
  %136 = fadd fast float %133, %67
  %137 = fmul fast float %134, 3.125000e-02
  %138 = fmul fast float %135, 3.125000e-02
  %139 = fmul fast float %136, 3.125000e-02
  %140 = fadd fast float %78, %72
  %141 = fadd fast float %79, %73
  %142 = fadd fast float %80, %74
  %143 = fadd fast float %140, %84
  %144 = fadd fast float %141, %85
  %145 = fadd fast float %142, %86
  %146 = fadd fast float %143, %89
  %147 = fadd fast float %144, %90
  %148 = fadd fast float %145, %91
  %149 = fmul fast float %146, 1.250000e-01
  %150 = fmul fast float %147, 1.250000e-01
  %151 = fmul fast float %148, 1.250000e-01
  %152 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %153 = extractvalue %dx.types.CBufRet.f32 %152, 2
  %154 = fdiv fast float 1.000000e+00, %153
  %155 = call float @dx.op.unary.f32(i32 23, float %101)  ; Log(value)
  %156 = call float @dx.op.unary.f32(i32 23, float %102)  ; Log(value)
  %157 = call float @dx.op.unary.f32(i32 23, float %103)  ; Log(value)
  %158 = fmul fast float %155, %154
  %159 = fmul fast float %156, %154
  %160 = fmul fast float %157, %154
  %161 = call float @dx.op.unary.f32(i32 21, float %158)  ; Exp(value)
  %162 = call float @dx.op.unary.f32(i32 21, float %159)  ; Exp(value)
  %163 = call float @dx.op.unary.f32(i32 21, float %160)  ; Exp(value)
  %164 = call float @dx.op.dot3.f32(i32 55, float %161, float %162, float %163, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %165 = fmul fast float %164, 2.500000e-01
  %166 = fadd fast float %165, 1.000000e+00
  %167 = fdiv fast float 1.000000e+00, %166
  %168 = fmul fast float %167, %101
  %169 = fmul fast float %167, %102
  %170 = fmul fast float %167, %103
  %171 = call float @dx.op.unary.f32(i32 23, float %113)  ; Log(value)
  %172 = call float @dx.op.unary.f32(i32 23, float %114)  ; Log(value)
  %173 = call float @dx.op.unary.f32(i32 23, float %115)  ; Log(value)
  %174 = fmul fast float %171, %154
  %175 = fmul fast float %172, %154
  %176 = fmul fast float %173, %154
  %177 = call float @dx.op.unary.f32(i32 21, float %174)  ; Exp(value)
  %178 = call float @dx.op.unary.f32(i32 21, float %175)  ; Exp(value)
  %179 = call float @dx.op.unary.f32(i32 21, float %176)  ; Exp(value)
  %180 = call float @dx.op.dot3.f32(i32 55, float %177, float %178, float %179, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %181 = fmul fast float %180, 2.500000e-01
  %182 = fadd fast float %181, 1.000000e+00
  %183 = fdiv fast float 1.000000e+00, %182
  %184 = fmul fast float %183, %113
  %185 = fmul fast float %183, %114
  %186 = fmul fast float %183, %115
  %187 = call float @dx.op.unary.f32(i32 23, float %125)  ; Log(value)
  %188 = call float @dx.op.unary.f32(i32 23, float %126)  ; Log(value)
  %189 = call float @dx.op.unary.f32(i32 23, float %127)  ; Log(value)
  %190 = fmul fast float %187, %154
  %191 = fmul fast float %188, %154
  %192 = fmul fast float %189, %154
  %193 = call float @dx.op.unary.f32(i32 21, float %190)  ; Exp(value)
  %194 = call float @dx.op.unary.f32(i32 21, float %191)  ; Exp(value)
  %195 = call float @dx.op.unary.f32(i32 21, float %192)  ; Exp(value)
  %196 = call float @dx.op.dot3.f32(i32 55, float %193, float %194, float %195, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %197 = fmul fast float %196, 2.500000e-01
  %198 = fadd fast float %197, 1.000000e+00
  %199 = fdiv fast float 1.000000e+00, %198
  %200 = fmul fast float %199, %125
  %201 = fmul fast float %199, %126
  %202 = fmul fast float %199, %127
  %203 = call float @dx.op.unary.f32(i32 23, float %137)  ; Log(value)
  %204 = call float @dx.op.unary.f32(i32 23, float %138)  ; Log(value)
  %205 = call float @dx.op.unary.f32(i32 23, float %139)  ; Log(value)
  %206 = fmul fast float %203, %154
  %207 = fmul fast float %204, %154
  %208 = fmul fast float %205, %154
  %209 = call float @dx.op.unary.f32(i32 21, float %206)  ; Exp(value)
  %210 = call float @dx.op.unary.f32(i32 21, float %207)  ; Exp(value)
  %211 = call float @dx.op.unary.f32(i32 21, float %208)  ; Exp(value)
  %212 = call float @dx.op.dot3.f32(i32 55, float %209, float %210, float %211, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %213 = fmul fast float %212, 2.500000e-01
  %214 = fadd fast float %213, 1.000000e+00
  %215 = fdiv fast float 1.000000e+00, %214
  %216 = fmul fast float %215, %137
  %217 = fmul fast float %215, %138
  %218 = fmul fast float %215, %139
  %219 = call float @dx.op.unary.f32(i32 23, float %149)  ; Log(value)
  %220 = call float @dx.op.unary.f32(i32 23, float %150)  ; Log(value)
  %221 = call float @dx.op.unary.f32(i32 23, float %151)  ; Log(value)
  %222 = fmul fast float %219, %154
  %223 = fmul fast float %220, %154
  %224 = fmul fast float %221, %154
  %225 = call float @dx.op.unary.f32(i32 21, float %222)  ; Exp(value)
  %226 = call float @dx.op.unary.f32(i32 21, float %223)  ; Exp(value)
  %227 = call float @dx.op.unary.f32(i32 21, float %224)  ; Exp(value)
  %228 = call float @dx.op.dot3.f32(i32 55, float %225, float %226, float %227, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000)  ; Dot3(ax,ay,az,bx,by,bz)
  %229 = fmul fast float %228, 2.500000e-01
  %230 = fadd fast float %229, 1.000000e+00
  %231 = fdiv fast float 1.000000e+00, %230
  %232 = fmul fast float %231, %149
  %233 = fmul fast float %231, %150
  %234 = fmul fast float %231, %151
  %235 = fadd fast float %184, %168
  %236 = fadd fast float %185, %169
  %237 = fadd fast float %186, %170
  %238 = fadd fast float %235, %200
  %239 = fadd fast float %236, %201
  %240 = fadd fast float %237, %202
  %241 = fadd fast float %238, %216
  %242 = fadd fast float %239, %217
  %243 = fadd fast float %240, %218
  %244 = fadd fast float %241, %232
  %245 = fadd fast float %242, %233
  %246 = fadd fast float %243, %234
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %244)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %245)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %246)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float 1.000000e+00)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.Dimensions @dx.op.getDimensions(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.viewIdState = !{!8}
!dx.entryPoints = !{!9}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"ps", i32 6, i32 6}
!3 = !{null, null, !4, !6}
!4 = !{!5}
!5 = !{i32 0, %BloomParam* undef, !"", i32 0, i32 1, i32 1, i32 20, null}
!6 = !{!7}
!7 = !{i32 0, %struct.SamplerState* undef, !"", i32 0, i32 2, i32 1, i32 0, null}
!8 = !{[4 x i32] [i32 2, i32 4, i32 7, i32 7]}
!9 = !{void ()* @main, !"main", !10, !3, !18}
!10 = !{!11, !15, null}
!11 = !{!12}
!12 = !{i32 0, !"TEXCOORD", i8 9, i8 0, !13, i8 2, i32 1, i8 2, i32 0, i8 0, !14}
!13 = !{i32 0}
!14 = !{i32 3, i32 3}
!15 = !{!16}
!16 = !{i32 0, !"SV_Target", i8 9, i8 16, !13, i8 0, i32 1, i8 4, i32 0, i8 0, !17}
!17 = !{i32 3, i32 15}
!18 = !{i32 0, i64 1073741824}

#endif

const unsigned char g_BloomKarisAveragePSBytes[] = {
  0x44, 0x58, 0x42, 0x43, 0x9d, 0xf1, 0xfe, 0x61, 0x3c, 0x8e, 0xba, 0xf7,
  0x98, 0xef, 0xd3, 0xa4, 0x01, 0xdf, 0xb2, 0x65, 0x01, 0x00, 0x00, 0x00,
  0x27, 0x18, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00,
  0x7f, 0x01, 0x00, 0x00, 0x9f, 0x09, 0x00, 0x00, 0xbb, 0x09, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0x31, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x4f, 0x53, 0x47, 0x31, 0x32, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x00, 0x50,
  0x53, 0x56, 0x30, 0xb8, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0d,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x42, 0x00, 0x03,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x07,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53,
  0x54, 0x41, 0x54, 0x18, 0x08, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x06,
  0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21,
  0x0c, 0x00, 0x00, 0xfd, 0x01, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41,
  0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25,
  0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42,
  0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a,
  0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00,
  0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41,
  0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51,
  0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
  0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13,
  0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89,
  0x20, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20,
  0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84,
  0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10,
  0xb0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0,
  0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c,
  0x80, 0x20, 0x88, 0x62, 0x20, 0x84, 0x8a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0,
  0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85, 0x40, 0x81, 0x32, 0x47, 0x10,
  0x94, 0x62, 0x21, 0x08, 0x86, 0xa1, 0xe6, 0xa6, 0xe1, 0xf2, 0x27, 0xec,
  0x21, 0x24, 0xbf, 0x43, 0x18, 0xa2, 0x91, 0x10, 0xa7, 0x91, 0x10, 0x41,
  0x10, 0x04, 0x51, 0x88, 0x87, 0x58, 0x08, 0x82, 0x6e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b,
  0x15, 0xc3, 0x30, 0x0c, 0x44, 0x61, 0x24, 0x62, 0x59, 0x86, 0x61, 0x18,
  0x08, 0x82, 0x18, 0x68, 0x2a, 0xc3, 0x40, 0x0c, 0x54, 0x15, 0x64, 0x20,
  0x86, 0x61, 0x18, 0x86, 0x81, 0xae, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87,
  0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31,
  0x0c, 0xc3, 0x50, 0x88, 0x8c, 0x58, 0x08, 0xd2, 0x8e, 0x1a, 0x2e, 0x7f,
  0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x91, 0xdb,
  0x46, 0x04, 0x41, 0x10, 0x44, 0x21, 0x38, 0x62, 0x21, 0xa8, 0xbb, 0x6d,
  0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0xc9, 0xa1, 0x22, 0x81,
  0x48, 0x23, 0xe7, 0x21, 0xa2, 0x09, 0x21, 0x24, 0x24, 0x10, 0x44, 0x21,
  0x16, 0x62, 0xf9, 0x08, 0x3c, 0x68, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9,
  0x5f, 0x09, 0x69, 0x43, 0x9a, 0x01, 0x11, 0x04, 0x41, 0x14, 0xa5, 0x58,
  0x08, 0x91, 0x60, 0x68, 0x1c, 0x08, 0x38, 0x65, 0x5b, 0x1c, 0x87, 0x49,
  0x81, 0x08, 0x60, 0x50, 0x41, 0x0c, 0xc3, 0x30, 0x90, 0x79, 0x93, 0x34,
  0x45, 0x94, 0x30, 0xf9, 0x2c, 0xc0, 0x3c, 0x0b, 0x11, 0xb1, 0x13, 0x30,
  0x11, 0x28, 0x20, 0x08, 0x4d, 0x02, 0x62, 0x8e, 0x00, 0x14, 0x00, 0x13,
  0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68,
  0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a,
  0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d,
  0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71,
  0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72,
  0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a,
  0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73,
  0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d,
  0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72,
  0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81,
  0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8,
  0x33, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x90, 0xa7, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x21, 0xcf, 0x05, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x43, 0x1e, 0x0d, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x86, 0x3c, 0x1d, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0xc0, 0x00, 0x08, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x63, 0x00, 0x04, 0x40,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x14,
  0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c,
  0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x46, 0x00,
  0x0a, 0xa5, 0x08, 0xca, 0xa0, 0x1c, 0x4a, 0xa1, 0x24, 0x0a, 0xa1, 0x20,
  0x0a, 0xa3, 0x40, 0xca, 0xa3, 0x9c, 0x05, 0xca, 0x7e, 0xa0, 0x34, 0xa8,
  0x28, 0x89, 0x11, 0x80, 0x22, 0x28, 0x90, 0x42, 0x20, 0xa6, 0x06, 0x68,
  0x2d, 0x40, 0x40, 0x40, 0x40, 0x04, 0x3a, 0x67, 0x00, 0x28, 0x9d, 0x01,
  0x20, 0x75, 0x2c, 0x42, 0x20, 0x8e, 0x83, 0xcc, 0x19, 0x00, 0x00, 0x79,
  0x18, 0x00, 0x00, 0xa3, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46,
  0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b,
  0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1,
  0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa,
  0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10,
  0x04, 0x13, 0x04, 0x82, 0x99, 0x20, 0x10, 0xcd, 0x06, 0x61, 0x20, 0x26,
  0x08, 0x84, 0xb3, 0x41, 0x30, 0x0c, 0x0a, 0x70, 0x73, 0x1b, 0x06, 0x84,
  0x20, 0x26, 0x08, 0x67, 0x40, 0x06, 0x54, 0x84, 0xd8, 0xde, 0xde, 0xda,
  0xa0, 0xc2, 0xe4, 0xc2, 0xda, 0x26, 0x08, 0xc4, 0xb3, 0x01, 0x31, 0x94,
  0xc5, 0x18, 0x06, 0x06, 0xd8, 0x10, 0x34, 0x13, 0x84, 0x34, 0x28, 0x03,
  0x4a, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x43, 0x6c, 0x61, 0x6d, 0x70,
  0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x13, 0x04, 0x02, 0xda, 0x80,
  0x18, 0x0f, 0x64, 0x44, 0x83, 0x01, 0x6c, 0x08, 0xa4, 0x0d, 0x04, 0x00,
  0x38, 0xd3, 0x04, 0xc1, 0x0c, 0xce, 0x80, 0xd0, 0xdc, 0x5b, 0x9d, 0xdc,
  0x58, 0x19, 0x55, 0x19, 0x1e, 0x5d, 0x9d, 0x5c, 0x59, 0x12, 0x19, 0xde,
  0x04, 0x81, 0x88, 0x26, 0x08, 0x84, 0x34, 0x41, 0x20, 0xa6, 0x09, 0x02,
  0x41, 0x4d, 0x10, 0x18, 0x31, 0xd8, 0x80, 0x10, 0xd6, 0x65, 0x60, 0x99,
  0xb6, 0x11, 0x29, 0xc3, 0x83, 0x7b, 0x9b, 0xab, 0x93, 0x2b, 0x9b, 0x20,
  0x10, 0xd5, 0x06, 0x83, 0xe8, 0x2e, 0x0f, 0xd3, 0x58, 0x9c, 0x85, 0xb5,
  0xb5, 0x85, 0x4d, 0x10, 0x08, 0x6b, 0x03, 0x42, 0x80, 0xc1, 0x15, 0x06,
  0x98, 0xa6, 0x6d, 0x4c, 0xe8, 0xd0, 0xe4, 0xca, 0xe6, 0xd0, 0xde, 0xd8,
  0xc8, 0x26, 0x08, 0xc4, 0xb5, 0xc1, 0x20, 0xc6, 0xe0, 0x22, 0x03, 0x4c,
  0x63, 0x92, 0xe6, 0x46, 0x57, 0xe6, 0x36, 0x97, 0x46, 0x97, 0x37, 0x41,
  0x20, 0xb0, 0x0d, 0x06, 0x61, 0x06, 0xd7, 0x19, 0x60, 0xda, 0x06, 0x83,
  0xe1, 0x3e, 0x31, 0x28, 0x03, 0x34, 0xd8, 0x30, 0x18, 0x55, 0x1a, 0x4c,
  0x10, 0x04, 0x60, 0x03, 0xb0, 0x61, 0x30, 0xd8, 0x80, 0x0d, 0x36, 0x04,
  0x6d, 0xb0, 0x61, 0x18, 0xd6, 0xc0, 0x0d, 0x26, 0x08, 0x6a, 0x60, 0x06,
  0x1b, 0x02, 0x38, 0x20, 0xd1, 0x16, 0x96, 0xe6, 0x46, 0x84, 0xaa, 0x08,
  0x6b, 0xe8, 0xe9, 0x49, 0x8a, 0x68, 0x82, 0x50, 0x74, 0x13, 0x84, 0xc2,
  0xdb, 0x10, 0x18, 0x13, 0x84, 0xe2, 0xdb, 0x20, 0x5c, 0xd7, 0x86, 0xc5,
  0x98, 0x03, 0x3a, 0xa8, 0x03, 0x3b, 0xb8, 0x83, 0xe1, 0x0e, 0x8c, 0x3a,
  0xc0, 0x83, 0x0d, 0x41, 0x1e, 0x30, 0x99, 0xb2, 0xfa, 0xa2, 0x0a, 0x93,
  0x3b, 0x2b, 0xa3, 0x9b, 0x20, 0x14, 0x60, 0x30, 0x41, 0x28, 0xc2, 0x60,
  0x82, 0x40, 0x64, 0x1b, 0x84, 0xcb, 0x0f, 0x36, 0x2c, 0xc6, 0x1e, 0xd0,
  0x01, 0x1f, 0xd8, 0x41, 0x1d, 0x0c, 0x7d, 0x60, 0xd4, 0xc1, 0x1f, 0x6c,
  0x08, 0x40, 0x61, 0xc3, 0xa0, 0x07, 0xa1, 0x00, 0x4c, 0x10, 0xd6, 0x60,
  0x0c, 0x36, 0x08, 0xc6, 0x28, 0x6c, 0x28, 0xd6, 0x40, 0x0e, 0x44, 0x81,
  0x22, 0x05, 0x1a, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73, 0x13, 0x04, 0x42,
  0x63, 0x91, 0xe6, 0x36, 0x47, 0x37, 0x37, 0x41, 0x20, 0x36, 0x1a, 0x73,
  0x69, 0x67, 0x5f, 0x6c, 0x64, 0x34, 0xe6, 0xd2, 0xce, 0xbe, 0xe6, 0xe8,
  0x88, 0xd0, 0x95, 0xe1, 0x7d, 0xb9, 0xbd, 0xc9, 0xb5, 0x4d, 0x10, 0x08,
  0x6e, 0x83, 0x62, 0x0a, 0xa7, 0x80, 0x0a, 0xa9, 0xa0, 0x0a, 0xd1, 0x2a,
  0x78, 0xac, 0xd0, 0x0a, 0x55, 0xd8, 0xd8, 0xec, 0xda, 0x5c, 0xd2, 0xc8,
  0xca, 0xdc, 0xe8, 0xa6, 0x04, 0x41, 0x15, 0x32, 0x3c, 0x17, 0xbb, 0x32,
  0xb9, 0xb9, 0xb4, 0x37, 0xb7, 0x29, 0x01, 0xd1, 0x84, 0x0c, 0xcf, 0xc5,
  0x2e, 0x8c, 0xcd, 0xae, 0x4c, 0x6e, 0x4a, 0x60, 0xd4, 0x21, 0xc3, 0x73,
  0x99, 0x43, 0x0b, 0x23, 0x2b, 0x93, 0x6b, 0x7a, 0x23, 0x2b, 0x63, 0x9b,
  0x12, 0x20, 0x65, 0xc8, 0xf0, 0x5c, 0xe4, 0xca, 0xe6, 0xde, 0xea, 0xe4,
  0xc6, 0xca, 0xe6, 0xa6, 0x04, 0x53, 0x25, 0x32, 0x3c, 0x17, 0xba, 0x3c,
  0xb8, 0xb2, 0x20, 0x37, 0xb7, 0x37, 0xba, 0x30, 0xba, 0xb4, 0x37, 0xb7,
  0xb9, 0x29, 0x42, 0x1a, 0xb8, 0x41, 0x1d, 0x32, 0x3c, 0x17, 0xbb, 0xb4,
  0xb2, 0xbb, 0x24, 0xb2, 0x29, 0xba, 0x30, 0xba, 0xb2, 0x29, 0x01, 0x1c,
  0xd4, 0x21, 0xc3, 0x73, 0x29, 0x73, 0xa3, 0x93, 0xcb, 0x83, 0x7a, 0x4b,
  0x73, 0xa3, 0x9b, 0x9b, 0x12, 0x90, 0x42, 0x17, 0x32, 0x3c, 0x97, 0xb1,
  0xb7, 0x3a, 0x37, 0xba, 0x32, 0xb9, 0xb9, 0x29, 0x41, 0x2b, 0x00, 0x79,
  0x18, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4,
  0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c,
  0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00,
  0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2,
  0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38,
  0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d,
  0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87,
  0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87,
  0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30,
  0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde,
  0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b,
  0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c,
  0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07,
  0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87,
  0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87,
  0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87,
  0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0,
  0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc,
  0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4,
  0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39,
  0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38,
  0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b,
  0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03,
  0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0,
  0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0,
  0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71,
  0x20, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0xa6, 0x40, 0x0d, 0x97, 0xef,
  0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42,
  0x18, 0xc2, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11,
  0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x25,
  0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x51, 0xe9,
  0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc8, 0x6d, 0xdb, 0x42, 0x37,
  0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0,
  0x10, 0x5f, 0xe4, 0x30, 0x1b, 0xd2, 0x0c, 0x48, 0x63, 0xd8, 0x80, 0x36,
  0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0,
  0x10, 0x5f, 0xe4, 0x30, 0x21, 0x01, 0x3c, 0x76, 0xe0, 0x0c, 0x97, 0xef,
  0x3c, 0xfe, 0xe0, 0x4c, 0xb7, 0x5f, 0xdc, 0xb6, 0x11, 0x4c, 0xc3, 0xe5,
  0x3b, 0x8f, 0x6f, 0x10, 0x53, 0x87, 0x30, 0x44, 0x23, 0x21, 0x4e, 0x23,
  0x59, 0xc0, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3,
  0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x15, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f,
  0x01, 0xcc, 0xb3, 0x10, 0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef,
  0x3c, 0xbe, 0x34, 0x39, 0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71,
  0xdb, 0x66, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6,
  0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7a, 0x52, 0x2c, 0xab, 0x37, 0xb5, 0x63, 0xa5, 0x01,
  0xa5, 0x91, 0xae, 0xc1, 0xc6, 0xe5, 0x11, 0x44, 0x58, 0x49, 0x4c, 0x64,
  0x0e, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00, 0x99, 0x03, 0x00, 0x00, 0x44,
  0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x4c,
  0x0e, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x90,
  0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13,
  0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06,
  0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e,
  0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4,
  0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48,
  0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4,
  0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1,
  0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08,
  0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40,
  0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d,
  0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49,
  0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20,
  0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x4c,
  0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13,
  0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12,
  0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0xb0, 0xc1, 0x08, 0x40,
  0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29,
  0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62,
  0x20, 0x84, 0x8a, 0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x10,
  0x68, 0x86, 0x85, 0x40, 0x81, 0x32, 0x47, 0x10, 0x94, 0x62, 0x21, 0x08,
  0x86, 0xa1, 0xe6, 0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0xbf, 0x43,
  0x18, 0xa2, 0x91, 0x10, 0xa7, 0x91, 0x10, 0x41, 0x10, 0x04, 0x51, 0x88,
  0x87, 0x58, 0x08, 0x82, 0x6e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2,
  0x57, 0x42, 0x5a, 0x89, 0xc9, 0x2f, 0x6e, 0x1b, 0x15, 0xc3, 0x30, 0x0c,
  0x44, 0x61, 0x24, 0x62, 0x59, 0x86, 0x61, 0x18, 0x08, 0x82, 0x18, 0x68,
  0x2a, 0xc3, 0x40, 0x0c, 0x54, 0x15, 0x64, 0x20, 0x86, 0x61, 0x18, 0x86,
  0x81, 0xae, 0xa3, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3,
  0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6, 0x11, 0x31, 0x0c, 0xc3, 0x50, 0x88,
  0x8c, 0x58, 0x08, 0xd2, 0x8e, 0x1a, 0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2,
  0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2, 0x91, 0xdb, 0x46, 0x04, 0x41, 0x10,
  0x44, 0x21, 0x38, 0x62, 0x21, 0xa8, 0xbb, 0x6d, 0xb8, 0xfc, 0x09, 0x7b,
  0x08, 0xc9, 0x5f, 0x09, 0xc9, 0xa1, 0x22, 0x81, 0x48, 0x23, 0xe7, 0x21,
  0xa2, 0x09, 0x21, 0x24, 0x24, 0x10, 0x44, 0x21, 0x16, 0x62, 0xf9, 0x08,
  0x3c, 0x68, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0x69, 0x43,
  0x9a, 0x01, 0x11, 0x04, 0x41, 0x14, 0xa5, 0x58, 0x08, 0x91, 0x60, 0x68,
  0x1c, 0x08, 0x38, 0x65, 0x5b, 0x1c, 0x87, 0x49, 0x81, 0x08, 0x60, 0x50,
  0x41, 0x0c, 0xc3, 0x30, 0x90, 0x79, 0x93, 0x34, 0x45, 0x94, 0x30, 0xf9,
  0x2c, 0xc0, 0x3c, 0x0b, 0x11, 0xb1, 0x13, 0x30, 0x11, 0x28, 0x20, 0x08,
  0x4d, 0x02, 0x62, 0x8e, 0x00, 0x14, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87,
  0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87,
  0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00,
  0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30,
  0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0,
  0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60,
  0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60,
  0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0,
  0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40,
  0x07, 0x43, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x04, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01, 0x30,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x02, 0x02,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0xcf, 0x05,
  0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e,
  0x0d, 0x08, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x1d, 0x10, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0xc0, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x86, 0x3c, 0x63, 0x00, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x32,
  0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47, 0xc6,
  0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x46, 0x00, 0x0a, 0xa5, 0x08, 0xca,
  0xa0, 0x3c, 0xa8, 0x28, 0x89, 0x11, 0x80, 0x22, 0x28, 0x90, 0x42, 0xa0,
  0xb5, 0x00, 0x01, 0x01, 0x01, 0x11, 0x28, 0x9d, 0x01, 0x20, 0x75, 0x2c,
  0x42, 0x20, 0x8e, 0x83, 0xce, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79,
  0x18, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46,
  0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b,
  0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1,
  0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa,
  0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10,
  0x04, 0x13, 0x04, 0x82, 0x99, 0x20, 0x10, 0xcd, 0x06, 0x61, 0x20, 0x28,
  0xc0, 0xcd, 0x6d, 0x18, 0x0c, 0x82, 0x98, 0x20, 0x10, 0xce, 0x04, 0xe1,
  0x0c, 0x36, 0x02, 0x13, 0x04, 0xe2, 0xd9, 0x80, 0x20, 0x89, 0x82, 0x0c,
  0xc3, 0x02, 0x6c, 0x08, 0x98, 0x09, 0x42, 0x1a, 0x64, 0x13, 0x04, 0x02,
  0xda, 0x80, 0x20, 0x8e, 0x82, 0x3c, 0x03, 0x02, 0x6c, 0x08, 0xa0, 0x0d,
  0x04, 0x00, 0x34, 0xd1, 0x04, 0x41, 0x0d, 0xb4, 0x0d, 0xc1, 0x34, 0x41,
  0x10, 0x00, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0xa8, 0x8a, 0xb0, 0x86,
  0x9e, 0x9e, 0xa4, 0x88, 0x26, 0x08, 0xc5, 0x34, 0x41, 0x28, 0xa8, 0x0d,
  0x01, 0x32, 0x41, 0x28, 0xaa, 0x09, 0x02, 0x11, 0x6d, 0x10, 0x38, 0x6e,
  0xc3, 0x82, 0x5c, 0x58, 0xa6, 0x6d, 0xc3, 0x86, 0x64, 0xdd, 0x86, 0xc0,
  0x63, 0x32, 0x65, 0xf5, 0x45, 0x15, 0x26, 0x77, 0x56, 0x46, 0x37, 0x41,
  0x28, 0xac, 0x09, 0x42, 0x71, 0x4d, 0x10, 0x08, 0x69, 0x83, 0xc0, 0x8d,
  0xc1, 0x86, 0x05, 0x01, 0x03, 0x2c, 0x0c, 0xb4, 0x6c, 0x10, 0x03, 0x24,
  0x23, 0x83, 0x0d, 0x41, 0x19, 0x6c, 0x18, 0x3e, 0x33, 0x00, 0x26, 0x08,
  0x6b, 0x80, 0x6d, 0x10, 0x10, 0x34, 0xd8, 0x50, 0x54, 0xd6, 0x19, 0x48,
  0x69, 0x50, 0x85, 0x8d, 0xcd, 0xae, 0xcd, 0x25, 0x8d, 0xac, 0xcc, 0x8d,
  0x6e, 0x4a, 0x10, 0x54, 0x21, 0xc3, 0x73, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x9b, 0x12, 0x10, 0x4d, 0xc8, 0xf0, 0x5c, 0xec, 0xc2, 0xd8,
  0xec, 0xca, 0xe4, 0xa6, 0x04, 0x44, 0x1d, 0x32, 0x3c, 0x97, 0x39, 0xb4,
  0x30, 0xb2, 0x32, 0xb9, 0xa6, 0x37, 0xb2, 0x32, 0xb6, 0x29, 0x81, 0x51,
  0x86, 0x0c, 0xcf, 0x45, 0xae, 0x6c, 0xee, 0xad, 0x4e, 0x6e, 0xac, 0x6c,
  0x6e, 0x4a, 0x10, 0xd5, 0x21, 0xc3, 0x73, 0xb1, 0x4b, 0x2b, 0xbb, 0x4b,
  0x22, 0x9b, 0xa2, 0x0b, 0xa3, 0x2b, 0x9b, 0x12, 0x4c, 0x75, 0xc8, 0xf0,
  0x5c, 0xca, 0xdc, 0xe8, 0xe4, 0xf2, 0xa0, 0xde, 0xd2, 0xdc, 0xe8, 0xe6,
  0xa6, 0x04, 0x69, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x4c,
  0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14,
  0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79,
  0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e,
  0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1,
  0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc,
  0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74,
  0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a,
  0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e,
  0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e,
  0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21,
  0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0,
  0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc,
  0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72,
  0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76,
  0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f,
  0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c,
  0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03,
  0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1,
  0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61,
  0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8,
  0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94,
  0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0,
  0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76,
  0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e,
  0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f,
  0xef, 0x50, 0x0f, 0xf4, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x34,
  0x00, 0x00, 0x00, 0xa6, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0, 0x34,
  0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3, 0x42, 0x18, 0xc2, 0x36, 0x5c,
  0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94,
  0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6, 0x25, 0x6c, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18,
  0x80, 0x80, 0xf9, 0xc8, 0x6d, 0xdb, 0x42, 0x37, 0x5c, 0xbe, 0xf3, 0xf8,
  0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x5f, 0xe4, 0x30,
  0x1b, 0xd2, 0x0c, 0x48, 0x63, 0xd8, 0x80, 0x36, 0x5c, 0xbe, 0xf3, 0xf8,
  0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x5f, 0xe4, 0x30,
  0x21, 0x01, 0x3c, 0x76, 0xe0, 0x0c, 0x97, 0xef, 0x3c, 0xfe, 0xe0, 0x4c,
  0xb7, 0x5f, 0xdc, 0xb6, 0x11, 0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0x6f, 0x10,
  0x53, 0x87, 0x30, 0x44, 0x23, 0x21, 0x4e, 0x23, 0x59, 0xc0, 0x34, 0x5c,
  0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93, 0x5f, 0xdc,
  0xb6, 0x15, 0x40, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x01, 0xcc, 0xb3, 0x10,
  0x7e, 0x71, 0xdb, 0x26, 0x50, 0x0d, 0x97, 0xef, 0x3c, 0xbe, 0x34, 0x39,
  0x11, 0x81, 0x52, 0xd3, 0x43, 0x4d, 0x7e, 0x71, 0xdb, 0x66, 0xf0, 0x0c,
  0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00,
  0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00, 0xe2,
  0x01, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00, 0x1e,
  0x00, 0x00, 0x00, 0xc4, 0x8c, 0x00, 0x50, 0x51, 0x02, 0x65, 0x40, 0x44,
  0x71, 0x14, 0x64, 0x40, 0x49, 0x42, 0x14, 0xed, 0x40, 0x69, 0x94, 0x5d,
  0xc1, 0x0e, 0xcc, 0x00, 0x94, 0x4b, 0xa9, 0x14, 0x5e, 0xb9, 0x95, 0x42,
  0xc9, 0x0e, 0x14, 0x02, 0x0d, 0x63, 0x04, 0x20, 0x08, 0x82, 0x20, 0x18,
  0x8c, 0x11, 0x80, 0x20, 0x08, 0x82, 0xdf, 0x18, 0x01, 0x08, 0x82, 0x20,
  0xfa, 0x8d, 0x11, 0xe0, 0xec, 0x7d, 0xe6, 0xde, 0x18, 0x41, 0xae, 0x97,
  0xee, 0xfc, 0x8d, 0x11, 0xc0, 0x3e, 0x3b, 0x97, 0xdf, 0x18, 0x01, 0x08,
  0x82, 0x20, 0xec, 0x8d, 0x11, 0x80, 0x20, 0x08, 0xe2, 0xdf, 0x0c, 0x00,
  0x7d, 0x73, 0x08, 0x9f, 0x33, 0x87, 0x30, 0x06, 0xcf, 0x1c, 0x02, 0x14,
  0x06, 0x24, 0xce, 0x41, 0x40, 0x90, 0xe3, 0xcd, 0x41, 0x30, 0x8c, 0x53,
  0x01, 0x00, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30, 0x06, 0x71,
  0x00, 0x09, 0x6c, 0x00, 0x06, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x30,
  0x06, 0x72, 0x10, 0x09, 0x71, 0x10, 0x06, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x00, 0x06, 0x74, 0x90, 0x05, 0xc6, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0x7e, 0x20, 0xc5, 0x41, 0x1c, 0xac, 0x41, 0x36, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0xc6, 0x1f, 0x4c, 0x72, 0x20, 0x07, 0x63, 0xa0,
  0x8d, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x41, 0x87, 0x07, 0xdd, 0x30, 0x07,
  0xa3, 0x09, 0x01, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0d, 0x28,
  0x84, 0x41, 0x70, 0x06, 0x67, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0x60, 0xa0, 0x07, 0x5f, 0xb0, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01,
  0x14, 0x0a, 0x65, 0x10, 0xdc, 0xc1, 0x68, 0x42, 0x00, 0x5c, 0x30, 0xd8,
  0x68, 0xc2, 0x10, 0x5c, 0x30, 0x98, 0x55, 0x03, 0x7d, 0xcc, 0x12, 0xe8,
  0x63, 0x82, 0x27, 0x1f, 0x73, 0x82, 0xf8, 0xd8, 0x00, 0x06, 0xf2, 0xb1,
  0xe0, 0x81, 0xcf, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x80, 0x81, 0x29,
  0xac, 0x01, 0x95, 0x8d, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1, 0xc4, 0x0a,
  0x68, 0xd0, 0x04, 0x84, 0xb0, 0x6d, 0xa3, 0x30, 0x0a, 0x6b, 0xb0, 0x8d,
  0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1,
  0x01, 0x80, 0x20, 0x18, 0x80, 0xc1, 0x2a, 0xc0, 0x41, 0xe6, 0x8d, 0x18,
  0x3c, 0x00, 0x08, 0x82, 0xc1, 0x14, 0x0b, 0x6d, 0x20, 0x05, 0xd7, 0x01,
  0x06, 0x60, 0x80, 0x0a, 0xa8, 0x00, 0x07, 0x60, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xe6, 0x6c, 0xf0, 0x19, 0x31,
  0x38, 0x00, 0x10, 0x04, 0x03, 0x30, 0x88, 0x05, 0x3b, 0xf8, 0xc8, 0x60,
  0xc4, 0xe0, 0x01, 0x40, 0x10, 0x0c, 0xa6, 0x5b, 0x98, 0x03, 0x2c, 0x10,
  0x1a, 0x33, 0x30, 0x03, 0x57, 0x70, 0x05, 0x3b, 0x30, 0x83, 0xd1, 0x84,
  0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84, 0x41, 0x18, 0x31, 0x38, 0x00,
  0x10, 0x04, 0x03, 0x30, 0xb0, 0x85, 0x3d, 0x20, 0x83, 0x34, 0x18, 0x31,
  0x78, 0x00, 0x10, 0x04, 0x83, 0x89, 0x17, 0xf0, 0xa0, 0x0b, 0xa8, 0x30,
  0x58, 0x83, 0x35, 0x98, 0x85, 0x59, 0xd8, 0x83, 0x35, 0x18, 0x4d, 0x08,
  0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03, 0x00,
  0x41, 0x30, 0x00, 0x83, 0x5d, 0x00, 0x85, 0x34, 0x70, 0x83, 0x11, 0x83,
  0x07, 0x00, 0x41, 0x30, 0x98, 0xc2, 0xa1, 0x0f, 0xc4, 0x20, 0x38, 0x03,
  0x33, 0x80, 0x03, 0x38, 0xc0, 0x05, 0x5c, 0x00, 0x05, 0x38, 0x18, 0x4d,
  0x08, 0x80, 0xd1, 0x04, 0x21, 0x18, 0x4d, 0x18, 0x84, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0x00, 0x03, 0x70, 0x28, 0x05, 0x37, 0x98, 0x83, 0x11,
  0x83, 0x07, 0x00, 0x41, 0x30, 0x98, 0xcc, 0x41, 0x14, 0xce, 0x20, 0x88,
  0xd6, 0xa0, 0x0e, 0xea, 0xa0, 0x17, 0x7a, 0xa1, 0x14, 0xea, 0x60, 0x34,
  0x21, 0x00, 0x46, 0x13, 0x84, 0x60, 0x34, 0x61, 0x10, 0xec, 0x0d, 0xc2,
  0x20, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x00, 0x06, 0xe6, 0xb0,
  0x0a, 0x74, 0x90, 0x07, 0x23, 0x06, 0x0f, 0x00, 0x82, 0x60, 0x30, 0xb1,
  0x03, 0x2a, 0xb4, 0x41, 0x40, 0x06, 0xc2, 0x1e, 0xec, 0xc1, 0x38, 0x8c,
  0xc3, 0x2a, 0xec, 0xc1, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68,
  0xc2, 0x20, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x01, 0x18, 0xac, 0x03,
  0x2c, 0xe4, 0x81, 0x1f, 0x8c, 0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1, 0x14,
  0x0f, 0xad, 0x20, 0x07, 0xc1, 0x1d, 0x1c, 0xa0, 0x00, 0x0a, 0xe8, 0x80,
  0x0e, 0xb0, 0x00, 0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x60, 0x00, 0x0f,
  0xb5, 0xe0, 0x07, 0xa3, 0x30, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0x93,
  0x3d, 0xc8, 0xc2, 0x1d, 0x04, 0x61, 0xc0, 0x94, 0x42, 0x29, 0xb4, 0x43,
  0x3b, 0xd4, 0x42, 0x29, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0x82, 0x81, 0x42, 0x1d, 0xc4, 0xc7, 0xea, 0x00, 0x14, 0xe0,
  0x33, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x60, 0x70, 0x0f, 0xbc, 0x50,
  0x0a, 0xaa, 0x30, 0x62, 0xf0, 0x00, 0x20, 0x08, 0x06, 0x53, 0x3f, 0xe4,
  0x82, 0x1f, 0x04, 0x83, 0xc0, 0x0a, 0xac, 0x40, 0x0f, 0xf4, 0xc0, 0x0b,
  0xac, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08,
  0xc6, 0x07, 0xa7, 0x00, 0x9f, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x00,
  0x83, 0x7e, 0x10, 0x87, 0x55, 0x80, 0x85, 0x11, 0x83, 0x07, 0x00, 0x41,
  0x30, 0x98, 0x46, 0xe2, 0x17, 0x48, 0x21, 0x10, 0x10, 0x59, 0x90, 0x05,
  0x7d, 0xd0, 0x07, 0x71, 0x90, 0x85, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x82, 0xd1, 0x84, 0x41, 0x30, 0x56, 0x08, 0x85, 0xf8, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0x01, 0x18, 0x8c, 0x04, 0x3a, 0xc4, 0x82, 0x2d, 0x8c,
  0x18, 0x3c, 0x00, 0x08, 0x82, 0xc1, 0x94, 0x12, 0xe5, 0xa0, 0x0a, 0xc1,
  0x23, 0xe0, 0x02, 0x2e, 0x80, 0x04, 0x48, 0xa0, 0x03, 0x2e, 0x8c, 0x26,
  0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x88, 0xc1, 0x01,
  0x80, 0x20, 0x18, 0x80, 0x01, 0x4a, 0xb4, 0x83, 0x2d, 0xec, 0xc2, 0x88,
  0xc1, 0x03, 0x80, 0x20, 0x18, 0x4c, 0x2e, 0xa1, 0x0e, 0xaf, 0x10, 0x34,
  0x47, 0x2f, 0xf4, 0x42, 0x49, 0x94, 0x44, 0x3b, 0xf4, 0xc2, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x18, 0x28, 0x94, 0x02,
  0x7c, 0x0c, 0x14, 0x4a, 0x01, 0x3e, 0x06, 0x0a, 0xa5, 0x00, 0x1f, 0x1b,
  0xf0, 0x00, 0x3e, 0x36, 0xe0, 0x01, 0x7c, 0x6c, 0xc0, 0x03, 0xf8, 0xd8,
  0x60, 0x07, 0xf0, 0xb1, 0xc1, 0x0e, 0xe0, 0x63, 0x83, 0x1d, 0xc0, 0xc7,
  0x06, 0x76, 0x90, 0x8f, 0x0d, 0xed, 0x20, 0x1f, 0x1b, 0xdc, 0x41, 0x3e,
  0x66, 0x0a, 0xac, 0x00, 0x1f, 0x33, 0x05, 0x56, 0x80, 0x8f, 0x99, 0x02,
  0x2b, 0xc0, 0xc7, 0x86, 0x3f, 0x80, 0x8f, 0x0d, 0x7f, 0x00, 0x1f, 0x1b,
  0xfe, 0x00, 0x3e, 0x36, 0xf4, 0x01, 0x7c, 0x6c, 0xe8, 0x03, 0xf8, 0xd8,
  0xd0, 0x07, 0xf0, 0xb1, 0x01, 0x1f, 0xe4, 0x63, 0x43, 0x3e, 0xc8, 0xc7,
  0x06, 0x7d, 0x90, 0x8f, 0xa1, 0x42, 0x2b, 0xc0, 0xc7, 0x50, 0xa1, 0x15,
  0xe0, 0x63, 0xa8, 0xd0, 0x0a, 0xf0, 0xb1, 0x01, 0x14, 0xe0, 0x63, 0x03,
  0x28, 0xc0, 0xc7, 0x06, 0x50, 0x80, 0x8f, 0x0d, 0x7e, 0x00, 0x1f, 0x1b,
  0xfc, 0x00, 0x3e, 0x36, 0xf8, 0x01, 0x7c, 0x6c, 0x20, 0x09, 0xf9, 0xd8,
  0x50, 0x12, 0xf2, 0xb1, 0xc1, 0x24, 0xe4, 0x63, 0xaf, 0x40, 0x0b, 0xf0,
  0xb1, 0x57, 0xa0, 0x05, 0xf8, 0xd8, 0x2b, 0xd0, 0x02, 0x7c, 0x6c, 0x38,
  0x05, 0xf8, 0xd8, 0x70, 0x0a, 0xf0, 0xb1, 0xe1, 0x14, 0xe0, 0x63, 0x43,
  0x29, 0xc0, 0xc7, 0x86, 0x52, 0x80, 0x8f, 0x0d, 0xa5, 0x00, 0x1f, 0x1b,
  0x60, 0x42, 0x3e, 0x36, 0xc4, 0x84, 0x7c, 0x6c, 0x90, 0x09, 0xf9, 0x98,
  0x1f, 0x90, 0x02, 0x7c, 0xcc, 0x0f, 0x48, 0x01, 0x3e, 0xe6, 0x07, 0xa4,
  0x00, 0x1f, 0x1b, 0xf6, 0x00, 0x3e, 0x36, 0xec, 0x01, 0x7c, 0x6c, 0xd8,
  0x03, 0xf8, 0xd8, 0x90, 0x07, 0xf0, 0xb1, 0x21, 0x0f, 0xe0, 0x63, 0x43,
  0x1e, 0xc0, 0xc7, 0x86, 0xb0, 0x90, 0x8f, 0x0d, 0x62, 0x21, 0x1f, 0x1b,
  0xc6, 0x42, 0x3e, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xa0, 0xad, 0xc6,
  0x5b, 0xd4, 0x44, 0x69, 0x8c, 0x26, 0x04, 0x82, 0x81, 0x45, 0x40, 0x9f,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xa8, 0x60, 0xe3, 0x2d, 0xec, 0x60,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xaa, 0xd8, 0x80, 0x0b, 0x3b, 0x18,
  0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x4a, 0x36, 0xe2, 0xc2, 0x0e, 0x6c,
  0x20, 0xe4, 0x63, 0x43, 0x21, 0x1f, 0x1b, 0x0c, 0xf9, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x41, 0x65, 0x1b, 0x74, 0x31, 0x8c, 0x18, 0x18, 0x00,
  0x08, 0x82, 0x41, 0x75, 0x1b, 0x75, 0x31, 0x8c, 0x18, 0x18, 0x00, 0x08,
  0x82, 0x41, 0x85, 0x1b, 0x76, 0x31, 0x8c, 0x18, 0x2c, 0x00, 0x08, 0x82,
  0xc1, 0x85, 0x1b, 0x75, 0x31, 0x08, 0x01, 0x5b, 0xb4, 0x85, 0x5b, 0x58,
  0x00, 0x17, 0xf2, 0xb1, 0x80, 0x2d, 0xe0, 0x63, 0x6d, 0x11, 0xd0, 0xc7,
  0x82, 0x51, 0x90, 0x8f, 0x09, 0xa3, 0x20, 0x1f, 0x1b, 0x46, 0x41, 0x3e,
  0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x50, 0x81, 0xc7, 0x5f, 0xe8, 0xc1,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x54, 0xe1, 0x01, 0x1a, 0x7a, 0x30,
  0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x95, 0x78, 0x84, 0x86, 0x1e, 0xd8,
  0x40, 0xc9, 0xc7, 0x86, 0x4a, 0x3e, 0x36, 0x58, 0xf2, 0x19, 0x31, 0x30,
  0x00, 0x10, 0x04, 0x83, 0xca, 0x3c, 0x48, 0x63, 0x18, 0x31, 0x30, 0x00,
  0x10, 0x04, 0x83, 0xea, 0x3c, 0x4a, 0x63, 0x18, 0x31, 0x30, 0x00, 0x10,
  0x04, 0x83, 0x0a, 0x3d, 0x4c, 0x63, 0x18, 0x31, 0x58, 0x00, 0x10, 0x04,
  0x83, 0x0b, 0x3d, 0x4a, 0x63, 0x10, 0x02, 0xbe, 0xe8, 0x0b, 0xbf, 0xb0,
  0x00, 0x34, 0xe4, 0x63, 0x01, 0x5f, 0xc0, 0xc7, 0xfa, 0x22, 0xa0, 0x8f,
  0x05, 0xa7, 0x20, 0x1f, 0x13, 0x4e, 0x41, 0x3e, 0x36, 0x9c, 0x82, 0x7c,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x82, 0x8f, 0xd7, 0xf0, 0x83,
  0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xa8, 0xe2, 0x03, 0x36, 0xfc, 0x60,
  0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0x2a, 0xf9, 0x88, 0x0d, 0x3f, 0xb0,
  0x81, 0x0c, 0xe4, 0x63, 0x43, 0x19, 0xc8, 0xc7, 0x06, 0x33, 0x90, 0xcf,
  0x88, 0x81, 0x01, 0x80, 0x20, 0x18, 0x54, 0xf6, 0x41, 0x1b, 0xc3, 0x88,
  0x81, 0x01, 0x80, 0x20, 0x18, 0x54, 0xf7, 0x51, 0x1b, 0xc3, 0x88, 0x81,
  0x01, 0x80, 0x20, 0x18, 0x54, 0xf8, 0x61, 0x1b, 0xc3, 0x88, 0xc1, 0x02,
  0x80, 0x20, 0x18, 0x5c, 0xf8, 0x51, 0x1b, 0x83, 0x10, 0xb0, 0x46, 0x6b,
  0xb8, 0x86, 0x05, 0xb0, 0x21, 0x1f, 0x0b, 0x58, 0x03, 0x3e, 0xd6, 0x1a,
  0x01, 0x7d, 0x2c, 0x58, 0x05, 0xf9, 0x98, 0xb0, 0x0a, 0xf2, 0xb1, 0x61,
  0x15, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x15, 0x88, 0xfc,
  0x86, 0x28, 0x8c, 0x18, 0x18, 0x00, 0x08, 0x82, 0x41, 0x15, 0x22, 0xe0,
  0x21, 0x0a, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0x50, 0x89, 0x48, 0x78,
  0x88, 0x82, 0x0d, 0x74, 0x20, 0x1f, 0x1b, 0xea, 0x40, 0x3e, 0x36, 0xd8,
  0x81, 0x7c, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x32, 0x11, 0xf2,
  0x18, 0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x3a, 0x91, 0xf2, 0x18,
  0x46, 0x0c, 0x0c, 0x00, 0x04, 0xc1, 0xa0, 0x42, 0x11, 0xf3, 0x18, 0x46,
  0x0c, 0x16, 0x00, 0x04, 0xc1, 0xe0, 0x42, 0x91, 0xf2, 0x18, 0x84, 0x80,
  0x37, 0x7a, 0xc3, 0x37, 0x2c, 0x00, 0x0f, 0xf9, 0x58, 0xc0, 0x1b, 0xf0,
  0xb1, 0xde, 0x08, 0xe8, 0x63, 0xc1, 0x2b, 0xc8, 0xc7, 0x84, 0x57, 0x90,
  0x8f, 0x0d, 0xaf, 0x20, 0x9f, 0x11, 0x03, 0x03, 0x00, 0x41, 0x30, 0xa8,
  0x60, 0xe4, 0x3d, 0x4c, 0x61, 0xc4, 0xc0, 0x00, 0x40, 0x10, 0x0c, 0xaa,
  0x18, 0x81, 0x0f, 0x53, 0x18, 0x31, 0x30, 0x00, 0x10, 0x04, 0x83, 0x4a,
  0x46, 0xe2, 0xc3, 0x14, 0x6c, 0x20, 0x05, 0xf9, 0xd8, 0x50, 0x0a, 0xf2,
  0xb1, 0xc1, 0x14, 0xe4, 0x33, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x95,
  0x8d, 0xd0, 0xc7, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0xd5, 0x8d,
  0xd4, 0xc7, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06, 0x15, 0x8e, 0xd8,
  0xc7, 0x30, 0x62, 0xb0, 0x00, 0x20, 0x08, 0x06, 0x17, 0x8e, 0xd4, 0xc7,
  0x20, 0x04, 0xec, 0xd1, 0x1e, 0xee, 0x61, 0x01, 0x7c, 0xc8, 0xc7, 0x02,
  0xf6, 0x80, 0x8f, 0xb5, 0x47, 0x40, 0x1f, 0x0b, 0x66, 0x41, 0x3e, 0x26,
  0xcc, 0x82, 0x7c, 0x6c, 0x98, 0x05, 0xf9, 0xd8, 0x1c, 0x8c, 0x02, 0x7c,
  0x6c, 0x0e, 0x46, 0x01, 0x3e, 0x36, 0x07, 0xa3, 0x00, 0x1f, 0x1b, 0xcc,
  0x00, 0x3e, 0x36, 0x98, 0x01, 0x7c, 0x6c, 0x30, 0x03, 0xf8, 0xd8, 0x90,
  0xc1, 0xc7, 0x86, 0x0c, 0x3e, 0x36, 0x64, 0xf0, 0xb1, 0x81, 0x81, 0x8f,
  0x0d, 0x0c, 0x7c, 0x6c, 0x60, 0xe0, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x08, 0x9c, 0x9c, 0x08, 0x99, 0x90, 0x89, 0x8f, 0x0c, 0x23, 0x06,
  0x09, 0x00, 0x82, 0x60, 0x80, 0xc0, 0xc9, 0x89, 0x90, 0x09, 0x99, 0xd4,
  0x88, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x08, 0x9c, 0x9c, 0x08,
  0x99, 0x90, 0x49, 0x8f, 0x04, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80,
  0xc0, 0xc9, 0x89, 0x90, 0x09, 0x99, 0xd0, 0x48, 0x7f, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00
};
