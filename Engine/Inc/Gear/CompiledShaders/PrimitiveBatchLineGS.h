#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyzw
; COLOR                    0   xyzw        1     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; COLOR                    0   xyzw        0     NONE   float   xyzw
; SV_Position              0   xyzw        1      POS   float   xyzw
;
; shader hash: 85c96e54c327749f67bcb7109109f2cb
;
; Pipeline Runtime Information: 
;
; Geometry Shader
; InputPrimitive=line
; OutputTopology=triangle
; OutputStreamMask=1
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; COLOR                    0                 linear       
; SV_Position              0          noperspective       
;
; Buffer Definitions:
;
; cbuffer perframeResource
; {
;
;   struct hostlayout.perframeResource
;   {
;
;       struct hostlayout.struct.PerframeResource
;       {
;
;           float deltaTime;                          ; Offset:    0
;           float timeElapsed;                        ; Offset:    4
;           uint uintSeed;                            ; Offset:    8
;           float floatSeed;                          ; Offset:   12
;           column_major float4x4 proj;               ; Offset:   16
;           column_major float4x4 view;               ; Offset:   80
;           float4 eyePos;                            ; Offset:  144
;           column_major float4x4 prevViewProj;       ; Offset:  160
;           column_major float4x4 viewProj;           ; Offset:  224
;           column_major float4x4 normalMatrix;       ; Offset:  288
;           float2 screenSize;                        ; Offset:  352
;           float2 screenTexelSize;                   ; Offset:  360
;       
;       } perframeResource;                           ; Offset:    0
;
;   
;   } perframeResource;                               ; Offset:    0 Size:   368
;
; }
;
; cbuffer LineParam
; {
;
;   struct LineParam
;   {
;
;       float lineWidth;                              ; Offset:    0
;   
;   } LineParam;                                      ; Offset:    0 Size:     4
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; perframeResource                  cbuffer      NA          NA     CB0            cb0     1
; LineParam                         cbuffer      NA          NA     CB1            cb2     1
;
;
; ViewId state:
;
; Number of inputs: 8, outputs per stream: { 8, 0, 0, 0 }
; Outputs for Stream 0 dependent on ViewId: {  }
; Inputs contributing to computation of Outputs for Stream 0:
;   output 0 depends on inputs: { 4 }
;   output 1 depends on inputs: { 5 }
;   output 2 depends on inputs: { 6 }
;   output 3 depends on inputs: { 7 }
;   output 4 depends on inputs: { 0, 1, 2, 3 }
;   output 5 depends on inputs: { 0, 1, 2, 3 }
;   output 6 depends on inputs: { 0, 1, 2, 3 }
;   output 7 depends on inputs: { 0, 1, 2, 3 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.perframeResource = type { %hostlayout.struct.PerframeResource }
%hostlayout.struct.PerframeResource = type { float, float, i32, float, [4 x <4 x float>], [4 x <4 x float>], <4 x float>, [4 x <4 x float>], [4 x <4 x float>], [4 x <4 x float>], <2 x float>, <2 x float> }
%LineParam = type { float }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 2, i32 2, i32 0, i8 2 }, i32 2, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %3 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 4 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %4 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2, %dx.types.ResourceProperties { i32 13, i32 368 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 1)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 1)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = fsub fast float %5, %7
  %10 = fsub fast float %6, %8
  %11 = call float @dx.op.dot2.f32(i32 54, float %9, float %10, float %9, float %10)  ; Dot2(ax,ay,bx,by)
  %12 = call float @dx.op.unary.f32(i32 25, float %11)  ; Rsqrt(value)
  %13 = fmul fast float %12, %9
  %14 = fmul fast float %12, %10
  %15 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %3, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %16 = extractvalue %dx.types.CBufRet.f32 %15, 0
  %17 = fmul fast float %14, %16
  %18 = fmul fast float %13, %16
  %19 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %20 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %21 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 2, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %22 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 3, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %23 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %24 = extractvalue %dx.types.CBufRet.f32 %23, 0
  %25 = extractvalue %dx.types.CBufRet.f32 %23, 1
  %26 = extractvalue %dx.types.CBufRet.f32 %23, 2
  %27 = extractvalue %dx.types.CBufRet.f32 %23, 3
  %28 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %29 = extractvalue %dx.types.CBufRet.f32 %28, 0
  %30 = extractvalue %dx.types.CBufRet.f32 %28, 1
  %31 = extractvalue %dx.types.CBufRet.f32 %28, 2
  %32 = extractvalue %dx.types.CBufRet.f32 %28, 3
  %33 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.f32 %33, 0
  %35 = extractvalue %dx.types.CBufRet.f32 %33, 1
  %36 = extractvalue %dx.types.CBufRet.f32 %33, 2
  %37 = extractvalue %dx.types.CBufRet.f32 %33, 3
  %38 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %39 = extractvalue %dx.types.CBufRet.f32 %38, 0
  %40 = extractvalue %dx.types.CBufRet.f32 %38, 1
  %41 = extractvalue %dx.types.CBufRet.f32 %38, 2
  %42 = extractvalue %dx.types.CBufRet.f32 %38, 3
  %43 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %44 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 0)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %45 = fadd fast float %7, %17
  %46 = fsub fast float %8, %18
  %47 = fmul fast float %45, %24
  %48 = call float @dx.op.tertiary.f32(i32 46, float %46, float %25, float %47)  ; FMad(a,b,c)
  %49 = call float @dx.op.tertiary.f32(i32 46, float %43, float %26, float %48)  ; FMad(a,b,c)
  %50 = call float @dx.op.tertiary.f32(i32 46, float %44, float %27, float %49)  ; FMad(a,b,c)
  %51 = fmul fast float %45, %29
  %52 = call float @dx.op.tertiary.f32(i32 46, float %46, float %30, float %51)  ; FMad(a,b,c)
  %53 = call float @dx.op.tertiary.f32(i32 46, float %43, float %31, float %52)  ; FMad(a,b,c)
  %54 = call float @dx.op.tertiary.f32(i32 46, float %44, float %32, float %53)  ; FMad(a,b,c)
  %55 = fmul fast float %45, %34
  %56 = call float @dx.op.tertiary.f32(i32 46, float %46, float %35, float %55)  ; FMad(a,b,c)
  %57 = call float @dx.op.tertiary.f32(i32 46, float %43, float %36, float %56)  ; FMad(a,b,c)
  %58 = call float @dx.op.tertiary.f32(i32 46, float %44, float %37, float %57)  ; FMad(a,b,c)
  %59 = fmul fast float %45, %39
  %60 = call float @dx.op.tertiary.f32(i32 46, float %46, float %40, float %59)  ; FMad(a,b,c)
  %61 = call float @dx.op.tertiary.f32(i32 46, float %43, float %41, float %60)  ; FMad(a,b,c)
  %62 = call float @dx.op.tertiary.f32(i32 46, float %44, float %42, float %61)  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %19)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %20)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %21)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %22)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %50)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %54)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %58)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %62)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.emitStream(i32 97, i8 0)  ; EmitStream(streamId)
  %63 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %64 = extractvalue %dx.types.CBufRet.f32 %63, 0
  %65 = extractvalue %dx.types.CBufRet.f32 %63, 1
  %66 = extractvalue %dx.types.CBufRet.f32 %63, 2
  %67 = extractvalue %dx.types.CBufRet.f32 %63, 3
  %68 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %69 = extractvalue %dx.types.CBufRet.f32 %68, 0
  %70 = extractvalue %dx.types.CBufRet.f32 %68, 1
  %71 = extractvalue %dx.types.CBufRet.f32 %68, 2
  %72 = extractvalue %dx.types.CBufRet.f32 %68, 3
  %73 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %74 = extractvalue %dx.types.CBufRet.f32 %73, 0
  %75 = extractvalue %dx.types.CBufRet.f32 %73, 1
  %76 = extractvalue %dx.types.CBufRet.f32 %73, 2
  %77 = extractvalue %dx.types.CBufRet.f32 %73, 3
  %78 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %79 = extractvalue %dx.types.CBufRet.f32 %78, 0
  %80 = extractvalue %dx.types.CBufRet.f32 %78, 1
  %81 = extractvalue %dx.types.CBufRet.f32 %78, 2
  %82 = extractvalue %dx.types.CBufRet.f32 %78, 3
  %83 = fsub fast float %7, %17
  %84 = fadd fast float %8, %18
  %85 = fmul fast float %83, %64
  %86 = call float @dx.op.tertiary.f32(i32 46, float %84, float %65, float %85)  ; FMad(a,b,c)
  %87 = call float @dx.op.tertiary.f32(i32 46, float %43, float %66, float %86)  ; FMad(a,b,c)
  %88 = call float @dx.op.tertiary.f32(i32 46, float %44, float %67, float %87)  ; FMad(a,b,c)
  %89 = fmul fast float %83, %69
  %90 = call float @dx.op.tertiary.f32(i32 46, float %84, float %70, float %89)  ; FMad(a,b,c)
  %91 = call float @dx.op.tertiary.f32(i32 46, float %43, float %71, float %90)  ; FMad(a,b,c)
  %92 = call float @dx.op.tertiary.f32(i32 46, float %44, float %72, float %91)  ; FMad(a,b,c)
  %93 = fmul fast float %83, %74
  %94 = call float @dx.op.tertiary.f32(i32 46, float %84, float %75, float %93)  ; FMad(a,b,c)
  %95 = call float @dx.op.tertiary.f32(i32 46, float %43, float %76, float %94)  ; FMad(a,b,c)
  %96 = call float @dx.op.tertiary.f32(i32 46, float %44, float %77, float %95)  ; FMad(a,b,c)
  %97 = fmul fast float %83, %79
  %98 = call float @dx.op.tertiary.f32(i32 46, float %84, float %80, float %97)  ; FMad(a,b,c)
  %99 = call float @dx.op.tertiary.f32(i32 46, float %43, float %81, float %98)  ; FMad(a,b,c)
  %100 = call float @dx.op.tertiary.f32(i32 46, float %44, float %82, float %99)  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %19)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %20)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %21)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %22)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %88)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %92)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %96)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %100)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.emitStream(i32 97, i8 0)  ; EmitStream(streamId)
  %101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %102 = extractvalue %dx.types.CBufRet.f32 %101, 0
  %103 = extractvalue %dx.types.CBufRet.f32 %101, 1
  %104 = extractvalue %dx.types.CBufRet.f32 %101, 2
  %105 = extractvalue %dx.types.CBufRet.f32 %101, 3
  %106 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %107 = extractvalue %dx.types.CBufRet.f32 %106, 0
  %108 = extractvalue %dx.types.CBufRet.f32 %106, 1
  %109 = extractvalue %dx.types.CBufRet.f32 %106, 2
  %110 = extractvalue %dx.types.CBufRet.f32 %106, 3
  %111 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %112 = extractvalue %dx.types.CBufRet.f32 %111, 0
  %113 = extractvalue %dx.types.CBufRet.f32 %111, 1
  %114 = extractvalue %dx.types.CBufRet.f32 %111, 2
  %115 = extractvalue %dx.types.CBufRet.f32 %111, 3
  %116 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %117 = extractvalue %dx.types.CBufRet.f32 %116, 0
  %118 = extractvalue %dx.types.CBufRet.f32 %116, 1
  %119 = extractvalue %dx.types.CBufRet.f32 %116, 2
  %120 = extractvalue %dx.types.CBufRet.f32 %116, 3
  %121 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 1)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %122 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 3, i32 1)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %123 = fadd fast float %5, %17
  %124 = fsub fast float %6, %18
  %125 = fmul fast float %123, %102
  %126 = call float @dx.op.tertiary.f32(i32 46, float %124, float %103, float %125)  ; FMad(a,b,c)
  %127 = call float @dx.op.tertiary.f32(i32 46, float %121, float %104, float %126)  ; FMad(a,b,c)
  %128 = call float @dx.op.tertiary.f32(i32 46, float %122, float %105, float %127)  ; FMad(a,b,c)
  %129 = fmul fast float %123, %107
  %130 = call float @dx.op.tertiary.f32(i32 46, float %124, float %108, float %129)  ; FMad(a,b,c)
  %131 = call float @dx.op.tertiary.f32(i32 46, float %121, float %109, float %130)  ; FMad(a,b,c)
  %132 = call float @dx.op.tertiary.f32(i32 46, float %122, float %110, float %131)  ; FMad(a,b,c)
  %133 = fmul fast float %123, %112
  %134 = call float @dx.op.tertiary.f32(i32 46, float %124, float %113, float %133)  ; FMad(a,b,c)
  %135 = call float @dx.op.tertiary.f32(i32 46, float %121, float %114, float %134)  ; FMad(a,b,c)
  %136 = call float @dx.op.tertiary.f32(i32 46, float %122, float %115, float %135)  ; FMad(a,b,c)
  %137 = fmul fast float %123, %117
  %138 = call float @dx.op.tertiary.f32(i32 46, float %124, float %118, float %137)  ; FMad(a,b,c)
  %139 = call float @dx.op.tertiary.f32(i32 46, float %121, float %119, float %138)  ; FMad(a,b,c)
  %140 = call float @dx.op.tertiary.f32(i32 46, float %122, float %120, float %139)  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %19)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %20)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %21)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %22)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %128)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %132)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %136)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %140)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.emitStream(i32 97, i8 0)  ; EmitStream(streamId)
  %141 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %142 = extractvalue %dx.types.CBufRet.f32 %141, 0
  %143 = extractvalue %dx.types.CBufRet.f32 %141, 1
  %144 = extractvalue %dx.types.CBufRet.f32 %141, 2
  %145 = extractvalue %dx.types.CBufRet.f32 %141, 3
  %146 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %147 = extractvalue %dx.types.CBufRet.f32 %146, 0
  %148 = extractvalue %dx.types.CBufRet.f32 %146, 1
  %149 = extractvalue %dx.types.CBufRet.f32 %146, 2
  %150 = extractvalue %dx.types.CBufRet.f32 %146, 3
  %151 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %152 = extractvalue %dx.types.CBufRet.f32 %151, 0
  %153 = extractvalue %dx.types.CBufRet.f32 %151, 1
  %154 = extractvalue %dx.types.CBufRet.f32 %151, 2
  %155 = extractvalue %dx.types.CBufRet.f32 %151, 3
  %156 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %4, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %157 = extractvalue %dx.types.CBufRet.f32 %156, 0
  %158 = extractvalue %dx.types.CBufRet.f32 %156, 1
  %159 = extractvalue %dx.types.CBufRet.f32 %156, 2
  %160 = extractvalue %dx.types.CBufRet.f32 %156, 3
  %161 = fsub fast float %5, %17
  %162 = fadd fast float %6, %18
  %163 = fmul fast float %161, %142
  %164 = call float @dx.op.tertiary.f32(i32 46, float %162, float %143, float %163)  ; FMad(a,b,c)
  %165 = call float @dx.op.tertiary.f32(i32 46, float %121, float %144, float %164)  ; FMad(a,b,c)
  %166 = call float @dx.op.tertiary.f32(i32 46, float %122, float %145, float %165)  ; FMad(a,b,c)
  %167 = fmul fast float %161, %147
  %168 = call float @dx.op.tertiary.f32(i32 46, float %162, float %148, float %167)  ; FMad(a,b,c)
  %169 = call float @dx.op.tertiary.f32(i32 46, float %121, float %149, float %168)  ; FMad(a,b,c)
  %170 = call float @dx.op.tertiary.f32(i32 46, float %122, float %150, float %169)  ; FMad(a,b,c)
  %171 = fmul fast float %161, %152
  %172 = call float @dx.op.tertiary.f32(i32 46, float %162, float %153, float %171)  ; FMad(a,b,c)
  %173 = call float @dx.op.tertiary.f32(i32 46, float %121, float %154, float %172)  ; FMad(a,b,c)
  %174 = call float @dx.op.tertiary.f32(i32 46, float %122, float %155, float %173)  ; FMad(a,b,c)
  %175 = fmul fast float %161, %157
  %176 = call float @dx.op.tertiary.f32(i32 46, float %162, float %158, float %175)  ; FMad(a,b,c)
  %177 = call float @dx.op.tertiary.f32(i32 46, float %121, float %159, float %176)  ; FMad(a,b,c)
  %178 = call float @dx.op.tertiary.f32(i32 46, float %122, float %160, float %177)  ; FMad(a,b,c)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %19)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %20)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %21)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %22)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %166)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %170)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 2, float %174)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 3, float %178)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.emitStream(i32 97, i8 0)  ; EmitStream(streamId)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind
declare void @dx.op.emitStream(i32, i8) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #0

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #0

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.viewIdState = !{!7}
!dx.entryPoints = !{!8}

!0 = !{!"clang version 3.7 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"gs", i32 6, i32 6}
!3 = !{null, null, !4, null}
!4 = !{!5, !6}
!5 = !{i32 0, %hostlayout.perframeResource* undef, !"", i32 0, i32 0, i32 1, i32 368, null}
!6 = !{i32 1, %LineParam* undef, !"", i32 0, i32 2, i32 1, i32 4, null}
!7 = !{[13 x i32] [i32 8, i32 8, i32 240, i32 240, i32 240, i32 240, i32 1, i32 2, i32 4, i32 8, i32 0, i32 0, i32 0]}
!8 = !{void ()* @main, !"main", !9, !3, !18}
!9 = !{!10, !15, null}
!10 = !{!11, !14}
!11 = !{i32 0, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 0, i8 0, !13}
!12 = !{i32 0}
!13 = !{i32 3, i32 15}
!14 = !{i32 1, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 1, i8 0, !13}
!15 = !{!16, !17}
!16 = !{i32 0, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 0, i8 0, !13}
!17 = !{i32 1, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 1, i8 0, !13}
!18 = !{i32 1, !19}
!19 = !{i32 2, i32 4, i32 1, i32 5, i32 1}

#endif

const unsigned char g_PrimitiveBatchLineGSBytes[] = {
  0x44, 0x58, 0x42, 0x43, 0xe5, 0x4e, 0xba, 0x6b, 0xc2, 0x39, 0x92, 0x4e,
  0x39, 0x0d, 0xf9, 0x5f, 0xf9, 0x2d, 0xaf, 0xde, 0x01, 0x00, 0x00, 0x00,
  0x60, 0x19, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00,
  0x04, 0x02, 0x00, 0x00, 0xb8, 0x0a, 0x00, 0x00, 0xd4, 0x0a, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0x5a, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x5a, 0x00,
  0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00,
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x53, 0x56, 0x5f, 0x50,
  0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xec, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x02, 0x00, 0x04, 0x00,
  0x02, 0x02, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x53, 0x54, 0x41, 0x54, 0xac, 0x08, 0x00, 0x00, 0x66, 0x00, 0x02, 0x00,
  0x2b, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xa0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x0c, 0x00, 0x51, 0x90, 0x52,
  0x8c, 0x81, 0x18, 0x86, 0x61, 0x20, 0xa6, 0x0c, 0x03, 0x31, 0x90, 0x73,
  0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12,
  0x93, 0x5f, 0xdc, 0x36, 0x22, 0x86, 0x61, 0x18, 0xa8, 0xb8, 0x67, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x44,
  0x85, 0x80, 0x08, 0x89, 0xa0, 0xa9, 0x14, 0x03, 0x31, 0x0c, 0x03, 0x55,
  0xb7, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0x39, 0x54,
  0x24, 0x10, 0x69, 0xe4, 0x3c, 0x44, 0x34, 0x21, 0x84, 0x84, 0x04, 0x82,
  0x28, 0x84, 0x44, 0x48, 0x17, 0x61, 0x07, 0x0d, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0x2b, 0x21, 0x6d, 0x48, 0x33, 0x20, 0x82, 0x20, 0x88, 0x62,
  0x8e, 0x20, 0x28, 0x85, 0x44, 0x68, 0xc4, 0x46, 0xdc, 0x40, 0xc0, 0x30,
  0x02, 0x31, 0x24, 0xc1, 0x37, 0x8c, 0x20, 0x0c, 0x27, 0x06, 0x87, 0x23,
  0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0x4b, 0x53, 0x44, 0x09, 0x93, 0x9f,
  0x12, 0x51, 0x11, 0x01, 0x0c, 0xb1, 0x12, 0x92, 0x43, 0x45, 0x02, 0x81,
  0x98, 0x61, 0x20, 0x06, 0x10, 0xfc, 0x40, 0x10, 0x0c, 0xc3, 0xdb, 0x0e,
  0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9, 0x7f, 0x88, 0xa8, 0x88, 0x00,
  0x86, 0x58, 0x09, 0xc9, 0xa1, 0x22, 0x81, 0x40, 0x81, 0x48, 0xe3, 0x25,
  0x25, 0xd2, 0x10, 0x29, 0x10, 0x01, 0x0c, 0x0a, 0x06, 0x2a, 0xb3, 0x81,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x28, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x61, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x02, 0x02, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x05, 0x04, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0c, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1c, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00,
  0x1a, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x46,
  0x00, 0x0a, 0xbc, 0xa0, 0x08, 0x0a, 0xa1, 0x0c, 0xca, 0xa1, 0x24, 0x0a,
  0xa2, 0x14, 0x0a, 0xa3, 0x40, 0x0a, 0x34, 0xa0, 0x40, 0x05, 0x0a, 0x58,
  0xa0, 0x80, 0x07, 0x0a, 0x98, 0xa0, 0x80, 0x0b, 0x0a, 0xba, 0xa0, 0x3c,
  0x0a, 0xa8, 0x5c, 0x07, 0xa8, 0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80,
  0x22, 0x20, 0x71, 0x06, 0x80, 0xc6, 0x19, 0x00, 0x22, 0x67, 0x00, 0xa8,
  0x9c, 0x01, 0x20, 0x73, 0x06, 0x80, 0xce, 0xb1, 0x1a, 0x04, 0x81, 0x0f,
  0xf8, 0x80, 0x0f, 0xf8, 0x08, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90,
  0x46, 0x02, 0x13, 0x44, 0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1,
  0x2b, 0x93, 0x9b, 0x4b, 0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41,
  0xa1, 0x0b, 0x3b, 0x9b, 0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a,
  0xfa, 0x9a, 0xb9, 0x81, 0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9,
  0x10, 0x04, 0x13, 0x04, 0x42, 0x99, 0x20, 0x10, 0xcb, 0x06, 0x61, 0x20,
  0x26, 0x08, 0x04, 0xb3, 0x41, 0x30, 0x0c, 0x0a, 0x67, 0x73, 0x1b, 0x06,
  0x84, 0x20, 0x26, 0x08, 0x64, 0x80, 0x06, 0x84, 0xe0, 0xca, 0xe4, 0xcc,
  0xe4, 0xc2, 0xda, 0xca, 0xa4, 0xca, 0xe6, 0xde, 0xea, 0xe4, 0xc6, 0xca,
  0x26, 0x08, 0x44, 0xb3, 0x01, 0x31, 0x94, 0xc5, 0x30, 0x06, 0x06, 0x98,
  0x20, 0x98, 0x81, 0x1a, 0x30, 0x61, 0x4a, 0x73, 0x2b, 0x83, 0x0a, 0x93,
  0x0b, 0x6b, 0x9b, 0x20, 0x10, 0xce, 0x04, 0x81, 0x78, 0x36, 0x20, 0x83,
  0xf3, 0x18, 0xd0, 0x10, 0x01, 0x1b, 0x84, 0x46, 0xda, 0x40, 0x00, 0xc0,
  0x04, 0x4c, 0x10, 0xca, 0x20, 0x0d, 0x98, 0xb0, 0xa5, 0xb9, 0x95, 0x5d,
  0xa5, 0x91, 0xd1, 0xa1, 0x4d, 0x10, 0x08, 0x68, 0x82, 0x40, 0x44, 0x13,
  0x04, 0x42, 0xda, 0x60, 0x10, 0xd6, 0x65, 0x60, 0xd9, 0x06, 0x21, 0xd2,
  0x26, 0x08, 0x62, 0x60, 0x06, 0x4c, 0xc8, 0xca, 0xd8, 0xe8, 0xc2, 0xa8,
  0xd2, 0xda, 0xca, 0x36, 0x18, 0x44, 0x77, 0x19, 0x58, 0xc6, 0x85, 0x2e,
  0xad, 0xad, 0xac, 0x88, 0x2d, 0x0c, 0x6e, 0xae, 0x8c, 0x6c, 0x83, 0x41,
  0x7c, 0x57, 0x84, 0x65, 0x44, 0xea, 0xd2, 0xdc, 0xe8, 0xa6, 0xca, 0xca,
  0xc8, 0x26, 0x08, 0xc4, 0x34, 0x41, 0x20, 0xa8, 0x0d, 0x06, 0x11, 0x06,
  0x97, 0x18, 0x60, 0x63, 0xc0, 0xc4, 0x8c, 0xed, 0x2d, 0x8c, 0x6e, 0xaa,
  0xac, 0x8c, 0x6c, 0x82, 0x40, 0x54, 0x1b, 0x0c, 0xa2, 0x0c, 0x2e, 0x33,
  0xc0, 0x32, 0x12, 0x70, 0x72, 0x6f, 0x6a, 0x1b, 0x86, 0x28, 0x82, 0x26,
  0x08, 0x84, 0xb5, 0x01, 0x21, 0xd0, 0x00, 0x4a, 0x83, 0x4b, 0x0d, 0xb0,
  0x8c, 0x84, 0x5d, 0x5a, 0xd9, 0xdd, 0x04, 0x81, 0xb8, 0x36, 0x20, 0x04,
  0x1b, 0x40, 0x69, 0x70, 0xb5, 0x01, 0x96, 0xd1, 0x28, 0xcb, 0x2b, 0x83,
  0x7a, 0x9b, 0x9b, 0x20, 0x10, 0xd8, 0x06, 0x83, 0x78, 0x83, 0x0b, 0x0e,
  0xb0, 0x8c, 0x0c, 0x9c, 0x5c, 0x99, 0x9d, 0x55, 0x5a, 0xd9, 0x1d, 0x94,
  0xdc, 0x9b, 0xda, 0x04, 0x81, 0xc8, 0x36, 0x20, 0x84, 0x1c, 0x40, 0x69,
  0x70, 0xcd, 0x01, 0x96, 0x11, 0xb1, 0x4b, 0x2b, 0xbb, 0x83, 0x92, 0x7b,
  0x53, 0x9b, 0x20, 0x10, 0xda, 0x06, 0x84, 0xa8, 0x03, 0x28, 0x0d, 0x2e,
  0x3b, 0xc0, 0x32, 0x32, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x4d, 0x61,
  0x74, 0x72, 0x69, 0x78, 0x13, 0x04, 0x62, 0xdb, 0x80, 0x10, 0x78, 0x00,
  0xa5, 0xc1, 0x95, 0x07, 0x58, 0x46, 0x65, 0x6e, 0x4c, 0xae, 0xac, 0xcc,
  0x6d, 0x2a, 0x4d, 0xaf, 0x6c, 0x82, 0x40, 0x70, 0x1b, 0x0c, 0x62, 0x0f,
  0x2e, 0x3e, 0xc0, 0x32, 0x3e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54,
  0x65, 0x78, 0x65, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x13, 0x04, 0xa2, 0xdb,
  0x60, 0x10, 0x7e, 0x70, 0xfd, 0x01, 0x96, 0x6d, 0x68, 0x18, 0x0f, 0x0c,
  0xc8, 0xe0, 0x0c, 0xd6, 0xc0, 0x0d, 0xe2, 0x80, 0x0e, 0xee, 0x40, 0x0f,
  0xfa, 0x00, 0x14, 0x26, 0x08, 0x63, 0x70, 0x06, 0x1b, 0x08, 0x62, 0xb9,
  0x8c, 0x0d, 0x02, 0x33, 0x0a, 0x1b, 0x0e, 0xa3, 0xda, 0xb8, 0x50, 0x10,
  0x05, 0x52, 0x98, 0x20, 0x08, 0xc0, 0x06, 0x60, 0xc3, 0x60, 0x9c, 0xc2,
  0x29, 0x6c, 0x08, 0x50, 0x61, 0xc3, 0x30, 0x98, 0x42, 0x2a, 0x4c, 0x10,
  0xce, 0x60, 0x0d, 0x36, 0x04, 0xab, 0x40, 0xa2, 0x2d, 0x2c, 0xcd, 0x8d,
  0xcb, 0x94, 0xd5, 0x17, 0xd4, 0xdb, 0x5c, 0x1a, 0x5d, 0xda, 0x9b, 0xdb,
  0x04, 0xa1, 0x08, 0x83, 0x09, 0x42, 0x21, 0x06, 0x1b, 0x02, 0x63, 0x82,
  0x50, 0x8c, 0xc1, 0x04, 0xa1, 0x20, 0x83, 0x09, 0x02, 0xe1, 0x6d, 0x10,
  0x2e, 0x5a, 0xd8, 0xb0, 0x18, 0xae, 0xf0, 0x0a, 0xb0, 0x10, 0x0b, 0xb2,
  0x30, 0xc8, 0x82, 0x31, 0x0b, 0xb5, 0xc0, 0x62, 0xe8, 0x89, 0xe9, 0x49,
  0x6a, 0x82, 0x50, 0x94, 0xc1, 0x86, 0x65, 0xb8, 0x85, 0x57, 0x98, 0x85,
  0x58, 0xc0, 0x85, 0x41, 0x16, 0x86, 0x59, 0xa8, 0x85, 0x0d, 0x82, 0x2d,
  0xe4, 0xc2, 0x86, 0xc5, 0xb8, 0x85, 0x57, 0x98, 0x85, 0x58, 0xc0, 0x85,
  0x41, 0x16, 0x8c, 0x59, 0xa8, 0x85, 0x0d, 0xcb, 0xe0, 0x0a, 0xaf, 0x00,
  0x0b, 0xb1, 0x20, 0x0b, 0x83, 0x2c, 0x0c, 0xb3, 0x50, 0x0b, 0x1b, 0x84,
  0x5d, 0xe0, 0x85, 0x0d, 0x83, 0x2e, 0xf4, 0x02, 0xb0, 0xa1, 0x80, 0xa2,
  0x61, 0x0c, 0x86, 0x0d, 0xc2, 0xf0, 0x0b, 0x1b, 0x0a, 0x53, 0x68, 0x05,
  0x5f, 0xa0, 0xc0, 0x81, 0x86, 0x19, 0xdb, 0x5b, 0x18, 0xdd, 0xdc, 0x04,
  0x81, 0xf8, 0x78, 0x9c, 0xcd, 0x7d, 0x95, 0xb5, 0xa5, 0xd1, 0xb1, 0x48,
  0x73, 0x9b, 0xa3, 0x9b, 0x9b, 0x20, 0x10, 0x60, 0x40, 0x63, 0x2e, 0xed,
  0xec, 0x8b, 0x8d, 0x8c, 0xc6, 0x5c, 0xda, 0xd9, 0xd7, 0x1c, 0xdd, 0x06,
  0x45, 0x1c, 0xc6, 0x81, 0x1c, 0xa2, 0x72, 0x30, 0x87, 0x73, 0x30, 0x03,
  0x74, 0x18, 0x87, 0x2a, 0x6c, 0x6c, 0x76, 0x6d, 0x2e, 0x69, 0x64, 0x65,
  0x6e, 0x74, 0x53, 0x82, 0xa0, 0x0a, 0x19, 0x9e, 0x8b, 0x5d, 0x99, 0xdc,
  0x5c, 0xda, 0x9b, 0xdb, 0x94, 0x80, 0x68, 0x42, 0x86, 0xe7, 0x62, 0x17,
  0xc6, 0x66, 0x57, 0x26, 0x37, 0x25, 0x30, 0xea, 0x90, 0xe1, 0xb9, 0xcc,
  0xa1, 0x85, 0x91, 0x95, 0xc9, 0x35, 0xbd, 0x91, 0x95, 0xb1, 0x4d, 0x09,
  0x90, 0x32, 0x64, 0x78, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
  0x65, 0x73, 0x53, 0x82, 0xa9, 0x12, 0x19, 0x9e, 0x0b, 0x5d, 0x1e, 0x5c,
  0x59, 0x90, 0x9b, 0xdb, 0x1b, 0x5d, 0x18, 0x5d, 0xda, 0x9b, 0xdb, 0xdc,
  0x14, 0x81, 0x14, 0x52, 0xa1, 0x0e, 0x19, 0x9e, 0x8b, 0x5d, 0x5a, 0xd9,
  0x5d, 0x12, 0xd9, 0x14, 0x5d, 0x18, 0x5d, 0xd9, 0x94, 0x60, 0x15, 0xea,
  0x90, 0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5, 0x41, 0xbd, 0xa5, 0xb9,
  0xd1, 0xcd, 0x4d, 0x09, 0xc0, 0xa1, 0x0b, 0x19, 0x9e, 0xcb, 0xd8, 0x5b,
  0x9d, 0x1b, 0x5d, 0x99, 0xdc, 0xdc, 0x94, 0x00, 0x1d, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xc8, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x72, 0x10, 0x87, 0x73, 0x70, 0x03, 0x7b, 0x08, 0x07, 0x79, 0x60,
  0x87, 0x70, 0xc8, 0x87, 0x77, 0xa8, 0x07, 0x7a, 0x00, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x86, 0x40, 0x0d, 0x97,
  0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0x98, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05,
  0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6,
  0x25, 0x74, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44, 0x04, 0x30, 0x11, 0x21,
  0xd0, 0x0c, 0x0b, 0xf1, 0x45, 0x0e, 0xb3, 0x21, 0xcd, 0x80, 0x34, 0x86,
  0x11, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38, 0x93, 0xed, 0x17, 0xb7,
  0x6d, 0x03, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x13, 0x0c, 0x32, 0xb1, 0x53,
  0x44, 0x00, 0x8c, 0x05, 0x4c, 0xc3, 0xe5, 0x3b, 0x8f, 0xbf, 0x38, 0xc0,
  0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x9b, 0x40, 0x35, 0x5c, 0xbe,
  0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d, 0x0f, 0x35, 0xf9, 0xc5,
  0x6d, 0xdb, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x13, 0x11, 0x4d, 0x08,
  0x10, 0x61, 0x7e, 0x71, 0xdb, 0x56, 0xf0, 0x0c, 0x97, 0xef, 0x3c, 0x3e,
  0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x41, 0x53, 0x48,
  0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0xc9, 0x6e, 0x54,
  0xc3, 0x27, 0x74, 0x9f, 0x67, 0xbc, 0xb7, 0x10, 0x91, 0x09, 0xf2, 0xcb,
  0x44, 0x58, 0x49, 0x4c, 0x84, 0x0e, 0x00, 0x00, 0x66, 0x00, 0x02, 0x00,
  0xa1, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x6c, 0x0e, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde,
  0x21, 0x0c, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91,
  0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c,
  0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02,
  0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b,
  0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5,
  0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50,
  0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06,
  0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff,
  0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f,
  0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00,
  0x89, 0x20, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09,
  0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3,
  0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c,
  0x10, 0xa0, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08,
  0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51,
  0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xa4, 0x0c, 0x00, 0x51, 0x90, 0x52,
  0x8c, 0x81, 0x18, 0x86, 0x61, 0x20, 0xa6, 0x0c, 0x03, 0x31, 0x90, 0x73,
  0xd4, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0xcf, 0x6d, 0x54, 0xb1, 0x12,
  0x93, 0x5f, 0xdc, 0x36, 0x22, 0x86, 0x61, 0x18, 0xa8, 0xb8, 0x67, 0xb8,
  0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x0f, 0x81, 0x66, 0x58, 0x08, 0x14, 0x44,
  0x85, 0x80, 0x08, 0x89, 0xa0, 0xa9, 0x14, 0x03, 0x31, 0x0c, 0x03, 0x55,
  0xb7, 0x0d, 0x97, 0x3f, 0x61, 0x0f, 0x21, 0xf9, 0x2b, 0x21, 0x39, 0x54,
  0x24, 0x10, 0x69, 0xe4, 0x3c, 0x44, 0x34, 0x21, 0x84, 0x84, 0x04, 0x82,
  0x28, 0x84, 0x44, 0x48, 0x17, 0x61, 0x07, 0x0d, 0x97, 0x3f, 0x61, 0x0f,
  0x21, 0xf9, 0x2b, 0x21, 0x6d, 0x48, 0x33, 0x20, 0x82, 0x20, 0x88, 0x62,
  0x8e, 0x20, 0x28, 0x85, 0x44, 0x68, 0xc4, 0x46, 0xdc, 0x40, 0xc0, 0x30,
  0x02, 0x31, 0x24, 0xc1, 0x37, 0x8c, 0x20, 0x0c, 0x27, 0x06, 0x87, 0x23,
  0x4d, 0x0b, 0x80, 0x39, 0xd4, 0xe4, 0x4b, 0x53, 0x44, 0x09, 0x93, 0x9f,
  0x12, 0x51, 0x11, 0x01, 0x0c, 0xb1, 0x12, 0x92, 0x43, 0x45, 0x02, 0x81,
  0x98, 0x61, 0x20, 0x06, 0x10, 0xfc, 0x40, 0x10, 0x0c, 0xc3, 0xdb, 0x0e,
  0x47, 0x9a, 0x16, 0x00, 0x73, 0xa8, 0xc9, 0x7f, 0x88, 0xa8, 0x88, 0x00,
  0x86, 0x58, 0x09, 0xc9, 0xa1, 0x22, 0x81, 0x40, 0x81, 0x48, 0xe3, 0x25,
  0x25, 0xd2, 0x10, 0x29, 0x10, 0x01, 0x0c, 0x0a, 0x06, 0x2a, 0xb3, 0x81,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x28, 0x40, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x61, 0x80, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0xe3, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0x67, 0x02, 0x02, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x05, 0x04, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0c, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x1c, 0x10,
  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x81, 0x00,
  0x10, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x46,
  0x00, 0x0a, 0xbc, 0xa0, 0x08, 0x0a, 0xa1, 0x0c, 0xca, 0xa3, 0x14, 0xa8,
  0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80, 0x22, 0x20, 0x72, 0x06, 0x80,
  0xcc, 0x19, 0x00, 0x3a, 0xc7, 0x6a, 0x10, 0x04, 0x3e, 0xe0, 0x03, 0x3e,
  0xe0, 0x23, 0x10, 0x08, 0x04, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0x5d, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0x44,
  0x35, 0x18, 0x63, 0x0b, 0x73, 0x3b, 0x03, 0xb1, 0x2b, 0x93, 0x9b, 0x4b,
  0x7b, 0x73, 0x03, 0x99, 0x71, 0xb9, 0x01, 0x41, 0xa1, 0x0b, 0x3b, 0x9b,
  0x7b, 0x91, 0x2a, 0x62, 0x2a, 0x0a, 0x9a, 0x2a, 0xfa, 0x9a, 0xb9, 0x81,
  0x79, 0x31, 0x4b, 0x73, 0x0b, 0x63, 0x4b, 0xd9, 0x10, 0x04, 0x13, 0x04,
  0x42, 0x99, 0x20, 0x10, 0xcb, 0x06, 0x61, 0x20, 0x28, 0x9c, 0xcd, 0x6d,
  0x18, 0x0c, 0x82, 0x98, 0x20, 0x10, 0xcc, 0x04, 0x81, 0x0c, 0x30, 0x02,
  0x13, 0x04, 0xa2, 0xd9, 0x80, 0x20, 0x89, 0x82, 0x20, 0xc3, 0x02, 0x4c,
  0x10, 0xcc, 0x20, 0x9b, 0x20, 0x10, 0xce, 0x04, 0x81, 0x78, 0x36, 0x20,
  0x43, 0xa3, 0x20, 0xce, 0xf0, 0x00, 0x1b, 0x04, 0x06, 0xda, 0x40, 0x00,
  0x40, 0x04, 0x4c, 0x10, 0xce, 0x40, 0xdb, 0x10, 0x4c, 0x13, 0x04, 0x01,
  0x20, 0xd1, 0x16, 0x96, 0xe6, 0xc6, 0x65, 0xca, 0xea, 0x0b, 0xea, 0x6d,
  0x2e, 0x8d, 0x2e, 0xed, 0xcd, 0x6d, 0x82, 0x50, 0x4c, 0x13, 0x84, 0x82,
  0xda, 0x10, 0x20, 0x13, 0x84, 0xa2, 0x9a, 0x20, 0x14, 0xd6, 0x04, 0x81,
  0x80, 0x26, 0x08, 0x44, 0xb4, 0x41, 0xe8, 0xbc, 0x0d, 0x0b, 0x72, 0x61,
  0x99, 0xb6, 0x0d, 0x1b, 0xc2, 0x7d, 0x2c, 0x86, 0x9e, 0x98, 0x9e, 0xa4,
  0x26, 0x08, 0xc5, 0xb5, 0x61, 0x19, 0xc2, 0x00, 0xe3, 0x34, 0x31, 0x18,
  0xb6, 0x81, 0xfb, 0x36, 0x08, 0x60, 0x30, 0x06, 0x1b, 0x16, 0x24, 0x0c,
  0x30, 0x4e, 0x13, 0x83, 0x61, 0x43, 0xb8, 0x6f, 0xc3, 0x32, 0x5c, 0x58,
  0xa6, 0x6d, 0xc3, 0x36, 0x70, 0xdf, 0x06, 0xa1, 0x0c, 0xcc, 0x60, 0xc3,
  0x40, 0x06, 0x67, 0x00, 0x4c, 0x10, 0x08, 0x69, 0x43, 0xe1, 0x3c, 0x43,
  0x1a, 0x0c, 0x1b, 0x84, 0x41, 0x0d, 0x36, 0x14, 0x95, 0x85, 0x06, 0xd2,
  0x1a, 0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3,
  0x9b, 0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2,
  0xde, 0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36,
  0xbb, 0x32, 0xb9, 0x29, 0x01, 0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d,
  0x8c, 0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x60, 0x94,
  0x21, 0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b,
  0x9b, 0x12, 0x44, 0x75, 0xc8, 0xf0, 0x5c, 0xec, 0xd2, 0xca, 0xee, 0x92,
  0xc8, 0xa6, 0xe8, 0xc2, 0xe8, 0xca, 0xa6, 0x04, 0x53, 0x1d, 0x32, 0x3c,
  0x97, 0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9,
  0x29, 0xc1, 0x1a, 0x00, 0x79, 0x18, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x8c, 0xc8,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x72, 0x10, 0x87, 0x73, 0x70, 0x03, 0x7b,
  0x08, 0x07, 0x79, 0x60, 0x87, 0x70, 0xc8, 0x87, 0x77, 0xa8, 0x07, 0x7a,
  0x00, 0x00, 0x00, 0x00, 0x71, 0x20, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x86, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c,
  0x44, 0x08, 0x34, 0xc3, 0x42, 0x98, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8,
  0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08,
  0x98, 0x5f, 0xdc, 0xb6, 0x25, 0x74, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x44,
  0x04, 0x30, 0x11, 0x21, 0xd0, 0x0c, 0x0b, 0xf1, 0x45, 0x0e, 0xb3, 0x21,
  0xcd, 0x80, 0x34, 0x86, 0x11, 0x38, 0xc3, 0xe5, 0x3b, 0x8f, 0x3f, 0x38,
  0x93, 0xed, 0x17, 0xb7, 0x6d, 0x03, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x13,
  0x0c, 0x32, 0xb1, 0x53, 0x44, 0x00, 0x8c, 0x05, 0x4c, 0xc3, 0xe5, 0x3b,
  0x8f, 0xbf, 0x38, 0xc0, 0x20, 0x36, 0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0x9b,
  0x40, 0x35, 0x5c, 0xbe, 0xf3, 0xf8, 0xd2, 0xe4, 0x44, 0x04, 0x4a, 0x4d,
  0x0f, 0x35, 0xf9, 0xc5, 0x6d, 0xdb, 0x81, 0x34, 0x5c, 0xbe, 0xf3, 0xf8,
  0x13, 0x11, 0x4d, 0x08, 0x10, 0x61, 0x7e, 0x71, 0xdb, 0x56, 0xf0, 0x0c,
  0x97, 0xef, 0x3c, 0x3e, 0xd5, 0x00, 0x11, 0xe6, 0x17, 0xb7, 0x6d, 0x00,
  0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x00, 0x02, 0x00, 0x00, 0x13, 0x04, 0x41, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0c, 0x00, 0x00, 0x00, 0x44, 0x14, 0x57, 0xd9, 0x95, 0x70, 0x40, 0xc9,
  0x0e, 0x14, 0xec, 0x40, 0x69, 0x14, 0x5b, 0xc9, 0x50, 0x51, 0x02, 0xb4,
  0x8d, 0x00, 0xd0, 0x35, 0x87, 0x00, 0x06, 0x0d, 0x69, 0x73, 0x10, 0x8e,
  0xc3, 0x5c, 0x73, 0x10, 0x0c, 0xc3, 0x5c, 0x74, 0xcd, 0x21, 0x80, 0xc1,
  0x03, 0x00, 0x00, 0x00, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0xc0, 0x81,
  0xc1, 0x32, 0x6c, 0xc5, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x70, 0x61,
  0xc0, 0x0c, 0x9e, 0x31, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0xd8, 0x18,
  0x30, 0xc2, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x18, 0x19, 0x34,
  0xc2, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1b, 0x78, 0x61,
  0x10, 0x06, 0xd7, 0x18, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xd1,
  0x06, 0x9f, 0x18, 0x88, 0xc1, 0x42, 0x06, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x60, 0xb8, 0x01, 0x18, 0x8c, 0xc1, 0x18, 0x64, 0x63, 0x30, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1b, 0x84, 0x01, 0x19, 0x90, 0x41,
  0x43, 0x06, 0x46, 0x08, 0xf1, 0x31, 0x42, 0x88, 0xcf, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x30, 0x6f, 0x20, 0x09, 0x81, 0x10, 0x8c, 0x18, 0x18,
  0x00, 0x08, 0x82, 0x81, 0xf3, 0x06, 0x52, 0x60, 0x01, 0x21, 0x1f, 0x13,
  0x08, 0xf9, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1, 0x14, 0x07, 0x1b,
  0xb3, 0x06, 0xa3, 0x09, 0x01, 0x60, 0x43, 0x20, 0x1f, 0x2b, 0x04, 0xf9,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xa1, 0x07, 0x6c, 0x10, 0x07,
  0x6f, 0x50, 0x06, 0x6f, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6,
  0x1e, 0xb4, 0x81, 0x1c, 0xc0, 0x41, 0x06, 0x07, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xf0, 0x81, 0x1b, 0xcc, 0x41, 0x1c, 0x98, 0x41, 0x1c,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0xd1, 0x07, 0x6f, 0x40, 0x07,
  0x72, 0xa0, 0x06, 0x72, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x53,
  0x1e, 0x8c, 0xc1, 0x54, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04,
  0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82,
  0x60, 0x30, 0xf9, 0x01, 0x1a, 0x60, 0x76, 0x30, 0x9a, 0x10, 0x00, 0xa3,
  0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70,
  0x00, 0x20, 0x08, 0x06, 0xd3, 0x28, 0xb4, 0x41, 0x97, 0x07, 0xa3, 0x09,
  0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c,
  0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0xa1, 0x82, 0x1c, 0x88, 0xc1,
  0x1f, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2,
  0x68, 0x02, 0x31, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x21, 0x0b,
  0xa4, 0x70, 0x0a, 0xa7, 0xc0, 0x07, 0xa7, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xc6, 0x2c, 0x94, 0x02, 0x2a, 0xa0, 0x02, 0x28, 0xa0, 0x82,
  0x99, 0x01, 0x07, 0x1f, 0x33, 0x03, 0x2e, 0x3e, 0x26, 0x5c, 0xf2, 0x19,
  0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x2a, 0x16, 0xfa, 0x40, 0xb8, 0x82,
  0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x64, 0xc1, 0x0f, 0x8c, 0x2b,
  0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x6a, 0x16, 0xfe, 0xc0, 0xb8,
  0x02, 0x33, 0x2c, 0xf9, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x55,
  0x0b, 0xa1, 0x60, 0x58, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54,
  0xb6, 0x20, 0x0a, 0x8a, 0x15, 0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x41,
  0x75, 0x0b, 0xa3, 0xa0, 0x58, 0x81, 0x29, 0x95, 0x7c, 0x46, 0x0c, 0x10,
  0x00, 0x04, 0xc1, 0xa0, 0xca, 0x85, 0x52, 0x50, 0xaa, 0x60, 0xc4, 0x00,
  0x01, 0x40, 0x10, 0x0c, 0x2a, 0x5d, 0x30, 0x05, 0xa7, 0x0a, 0x46, 0x0c,
  0x10, 0x00, 0x04, 0xc1, 0xa0, 0xda, 0x85, 0x53, 0x70, 0xaa, 0xc0, 0x1c,
  0x4a, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xf5, 0x42, 0x2a,
  0x38, 0x54, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x95, 0x2f, 0xa8,
  0x82, 0x44, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xfd, 0xc2,
  0x2a, 0x48, 0x54, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x39,
  0xd4, 0xc2, 0x2e, 0xec, 0x42, 0x2c, 0xb0, 0xc1, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x20, 0xe5, 0x50, 0x0b, 0xbb, 0xb0, 0x0b, 0xa4, 0xb0, 0x06,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x94, 0x43, 0x2d, 0xec, 0xc2,
  0x2e, 0xc0, 0x82, 0x1a, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x52,
  0x0e, 0xb5, 0xb0, 0x0b, 0xbb, 0x30, 0x0b, 0x69, 0x30, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0x48, 0x39, 0xd4, 0x42, 0x2f, 0xec, 0x42, 0x2c, 0x34,
  0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0x94, 0x43, 0x2d, 0xf4, 0xc2,
  0x2e, 0x90, 0x42, 0x32, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x39,
  0xd4, 0x42, 0x2f, 0xec, 0x02, 0x2c, 0x14, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x80, 0x94, 0x43, 0x2d, 0xf4, 0xc2, 0x2e, 0xcc, 0x42, 0x30, 0x62,
  0x60, 0x00, 0x20, 0x08, 0x06, 0x0a, 0x39, 0xa8, 0x42, 0x2c, 0x8c, 0x18,
  0x1c, 0x00, 0x08, 0x82, 0xc1, 0x14, 0x0e, 0xab, 0xb0, 0x07, 0xbd, 0x30,
  0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09,
  0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x93, 0x39, 0xc0, 0x02,
  0x28, 0xf8, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2,
  0x20, 0x8c, 0x26, 0x10, 0xc3, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c,
  0xeb, 0x50, 0x0b, 0xa5, 0x10, 0x0e, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0x30, 0xc1, 0x83, 0x2e, 0xa8, 0xc2, 0x39, 0x8c, 0x26, 0x04,
  0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x18,
  0x2b, 0x88, 0x42, 0x7c, 0x8c, 0x15, 0x44, 0x01, 0x3e, 0x26, 0x54, 0xf2,
  0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0xea, 0x1e, 0xc6, 0x41, 0xa8,
  0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0xf0, 0x81, 0x1c, 0xd8,
  0xa0, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0xca, 0x87, 0x72,
  0x60, 0x83, 0x2a, 0x30, 0x83, 0x92, 0xcf, 0x88, 0x01, 0x02, 0x80, 0x20,
  0x18, 0x54, 0xfb, 0x70, 0x0e, 0x06, 0x15, 0x8c, 0x18, 0x20, 0x00, 0x08,
  0x82, 0x41, 0xc5, 0x0f, 0xe8, 0x00, 0x07, 0x54, 0x30, 0x62, 0x80, 0x00,
  0x20, 0x08, 0x06, 0x55, 0x3f, 0xa4, 0x03, 0x1c, 0x50, 0x81, 0x29, 0x93,
  0x7c, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0xfa, 0x87, 0x75, 0x50,
  0xa6, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0x2a, 0x90, 0x60, 0x07,
  0x3a, 0x98, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x42, 0xa2,
  0x1d, 0xe8, 0x60, 0x0a, 0xcc, 0x91, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0xd5, 0x48, 0xbc, 0x83, 0x23, 0x05, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x50, 0x91, 0x04, 0x3c, 0xe0, 0x81, 0x14, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x41, 0x55, 0x12, 0xf1, 0x80, 0x07, 0x52, 0x30, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x4a, 0xec, 0x43, 0x48, 0x84, 0xc4,
  0x3d, 0xc8, 0xc2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x2b, 0xb1,
  0x0f, 0x21, 0x11, 0x12, 0xea, 0x10, 0x0b, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x80, 0xac, 0xc4, 0x3e, 0x84, 0x44, 0x48, 0xd8, 0x03, 0x2c, 0x8c,
  0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xb2, 0x12, 0xfb, 0x10, 0x12, 0x21,
  0x91, 0x0f, 0xaf, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x4a,
  0xec, 0xc3, 0x48, 0x84, 0xc4, 0x3d, 0x34, 0x23, 0x06, 0x09, 0x00, 0x82,
  0x60, 0x80, 0xac, 0xc4, 0x3e, 0x8c, 0x44, 0x48, 0xa8, 0x43, 0x32, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x4a, 0xec, 0xc3, 0x48, 0x84, 0x84,
  0x3d, 0x14, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xac, 0xc4, 0x3e,
  0x8c, 0x44, 0x48, 0xe4, 0x43, 0x30, 0x62, 0x60, 0x00, 0x20, 0x08, 0x06,
  0x8a, 0x4a, 0xc0, 0xc3, 0x3d, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0xc1,
  0x74, 0x12, 0xf1, 0x10, 0x0e, 0x23, 0x31, 0x9a, 0x10, 0x00, 0xa3, 0x09,
  0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x13, 0x4b, 0xd8, 0x83, 0x39, 0x90, 0xc4, 0x68, 0x42,
  0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20, 0x8c, 0x26, 0x10, 0xc3,
  0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0x31, 0xb1, 0x0f, 0xeb, 0x70,
  0x12, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30,
  0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0x30, 0xd9, 0x04,
  0x48, 0xc0, 0x43, 0x4b, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c,
  0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x01, 0x16, 0x32, 0x51, 0x13, 0x35, 0xa1, 0x12, 0x37, 0x31, 0x62,
  0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x58, 0xcc, 0x84, 0x4d, 0xd8, 0x84,
  0x4b, 0xe0, 0x84, 0xd9, 0x83, 0x3a, 0xc0, 0xc7, 0xec, 0x41, 0x1d, 0xe2,
  0x63, 0xc2, 0x25, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8, 0x7e,
  0x62, 0x25, 0x84, 0x2b, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83, 0x0a,
  0x2c, 0x58, 0xc2, 0xb8, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8,
  0xc2, 0xa2, 0x25, 0x8c, 0x2b, 0x30, 0xc3, 0x92, 0xcf, 0x88, 0x01, 0x02,
  0x80, 0x20, 0x18, 0x54, 0x63, 0xf1, 0x12, 0x86, 0x15, 0x8c, 0x18, 0x20,
  0x00, 0x08, 0x82, 0x41, 0x45, 0x16, 0x30, 0xa1, 0x58, 0xc1, 0x88, 0x01,
  0x02, 0x80, 0x20, 0x18, 0x54, 0x65, 0x11, 0x13, 0x8a, 0x15, 0x98, 0x52,
  0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0xb3, 0x98, 0x09,
  0xa5, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1, 0xa0, 0x42, 0x0b, 0x9a,
  0x70, 0xaa, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c, 0xaa, 0xb4, 0xa8,
  0x09, 0xa7, 0x0a, 0xcc, 0xa1, 0xe4, 0x33, 0x62, 0x80, 0x00, 0x20, 0x08,
  0x06, 0xd5, 0x5a, 0xdc, 0x84, 0x43, 0x05, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x50, 0xb1, 0x05, 0x4e, 0x48, 0x54, 0x30, 0x62, 0x80, 0x00, 0x20,
  0x08, 0x06, 0x55, 0x5b, 0xe4, 0x84, 0x44, 0x05, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xcc, 0xc5, 0x58, 0xa4, 0x45, 0x5a, 0xfc, 0x84, 0x3e,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0x32, 0x17, 0x63, 0x91, 0x16,
  0x69, 0x21, 0x13, 0xf9, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc8,
  0x5c, 0x8c, 0x45, 0x5a, 0xa4, 0x85, 0x4f, 0xe0, 0xc3, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x73, 0x31, 0x16, 0x69, 0x91, 0x16, 0x61, 0x71,
  0x0f, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xcc, 0xc5, 0x58, 0xac,
  0x45, 0x5a, 0xfc, 0x44, 0x33, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc8,
  0x5c, 0x8c, 0xc5, 0x5a, 0xa4, 0x85, 0x4c, 0x24, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xcc, 0xc5, 0x58, 0xac, 0x45, 0x5a, 0xf8, 0x44, 0x31,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc8, 0x5c, 0x8c, 0xc5, 0x5a, 0xa4,
  0x45, 0x58, 0x04, 0x23, 0x06, 0x06, 0x00, 0x82, 0x60, 0xa0, 0xc8, 0x05,
  0x4e, 0xfc, 0xc4, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x4c, 0x6f, 0x91,
  0x13, 0x29, 0xb1, 0x16, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3,
  0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x30, 0xd1, 0x85, 0x4f, 0xb8, 0x04, 0x5b, 0x8c, 0x26, 0x04, 0xc0, 0x68,
  0x82, 0x10, 0x8c, 0x26, 0x0c, 0xc2, 0x68, 0x02, 0x31, 0x8c, 0x18, 0x1c,
  0x00, 0x08, 0x82, 0xc1, 0x94, 0x17, 0x63, 0x31, 0x13, 0x6f, 0x31, 0x9a,
  0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x93, 0x5f, 0xa0, 0x05, 0x4e,
  0xd4, 0xc5, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x8c, 0x26, 0x10, 0x83, 0xf1, 0x04, 0x4c, 0xc4, 0xc7, 0x78, 0x02, 0x26,
  0xe0, 0x63, 0x42, 0x25, 0x9f, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0xa8,
  0x4a, 0x23, 0x2e, 0x84, 0x2a, 0x18, 0x31, 0x40, 0x00, 0x10, 0x04, 0x83,
  0xca, 0x34, 0xe4, 0x82, 0x0d, 0xaa, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10,
  0x0c, 0xaa, 0xd3, 0x98, 0x0b, 0x36, 0xa8, 0x02, 0x33, 0x28, 0xf9, 0x8c,
  0x18, 0x20, 0x00, 0x08, 0x82, 0x41, 0x95, 0x1a, 0x75, 0x61, 0x50, 0xc1,
  0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0xaa, 0x61, 0x17, 0x70, 0x40,
  0x05, 0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xad, 0xc6, 0x5d, 0xc0,
  0x01, 0x15, 0x98, 0x32, 0xc9, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xaa, 0xd6, 0xc8, 0x0b, 0x65, 0x0a, 0x46, 0x0c, 0x10, 0x00, 0x04, 0xc1,
  0xa0, 0x72, 0x0d, 0xbd, 0xa0, 0x83, 0x29, 0x18, 0x31, 0x40, 0x00, 0x10,
  0x04, 0x83, 0xea, 0x35, 0xf6, 0x82, 0x0e, 0xa6, 0xc0, 0x1c, 0x49, 0x3e,
  0x23, 0x06, 0x08, 0x00, 0x82, 0x60, 0x50, 0xc5, 0x46, 0x5f, 0x38, 0x52,
  0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x95, 0x6c, 0xf8, 0x05, 0x1e,
  0x48, 0xc1, 0x88, 0x01, 0x02, 0x80, 0x20, 0x18, 0x54, 0xb3, 0xf1, 0x17,
  0x78, 0x20, 0x05, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xe4, 0x46,
  0x6a, 0xbc, 0xc6, 0x6b, 0x94, 0x06, 0x58, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x01, 0x92, 0x1b, 0xa9, 0xf1, 0x1a, 0xaf, 0x81, 0x17, 0x3f, 0x31,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x6e, 0xa4, 0xc6, 0x6b, 0xbc,
  0x06, 0x69, 0xf8, 0xc4, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0xb9,
  0x91, 0x1a, 0xaf, 0xf1, 0x1a, 0xa7, 0xd1, 0x13, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xe4, 0x46, 0x6a, 0xc4, 0xc6, 0x6b, 0x94, 0x46, 0x33,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x6e, 0xa4, 0x46, 0x6c, 0xbc,
  0x06, 0x5e, 0x24, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x80, 0xe4, 0x46,
  0x6a, 0xc4, 0xc6, 0x6b, 0x90, 0x46, 0x31, 0x62, 0x90, 0x00, 0x20, 0x08,
  0x06, 0x48, 0x6e, 0xa4, 0x46, 0x6c, 0xbc, 0xc6, 0x69, 0x04, 0x23, 0x06,
  0x06, 0x00, 0x82, 0x60, 0xa0, 0xe0, 0x86, 0x5f, 0x94, 0x06, 0x02, 0x00,
  0x00, 0x00, 0x00, 0x00
};
